{"version":3,"file":"static/chunks/390-6112be132be03a46.js","mappings":"mPAsBA,SAASA,EAAaC,CAA0B,CAAEC,CAAuB,CAAU,CACjF,IAAIC,EAAeD,CAAK,CAACD,EAAG,CAO5B,OANW,IAAI,EAAXE,GACFA,CAAAA,EAAMC,CAAU,CAACH,EAAG,EAElBE,GAAOE,MAAMC,OAAO,CAACH,IACvBA,CAAAA,EAAMA,EAAII,IAAI,CAAC,OAEVC,OAAOL,EAChB,CAEe,SAASM,EAAWP,CAAuB,CAAe,CACvE,IAAMQ,EAAQV,EAAa,QAASE,GAC9BS,EAAQX,EAAa,QAASE,GAC9BU,EAAWZ,EAAa,WAAYE,GAC1C,MACE,GAAAW,EAAAC,IAAA,EAACC,IAAIA,WACH,GAAAF,EAAAG,GAAA,EAACN,QAAAA,UAAOA,IACR,GAAAG,EAAAG,GAAA,EAACC,OAAAA,CAAKC,KAAK,QAAQC,QAAST,IAC5B,GAAAG,EAAAG,GAAA,EAACC,OAAAA,CAAKC,KAAK,cAAcC,QAASR,IAClC,GAAAE,EAAAG,GAAA,EAACC,OAAAA,CAAKC,KAAK,WAAWC,QAASP,MAGrC,iCC3Be,SAASQ,EAAYlB,CAAwB,CAAe,CACzE,IAAQmB,EAAwBnB,EAAxBmB,QAAAA,CAAUC,EAAcpB,EAAdoB,SAAAA,CAClB,MACE,GAAAT,EAAAG,GAAA,EAACO,EAAAA,EAAKA,CAAAA,CAACD,UAAWE,IAAWF,EAAWG,IAAAA,SAAgB,EAAGC,IAAI,UAAUC,KAAI,YAC1EN,GAGP,wBCFe,SAASO,EAAkB1B,CAA8B,CAAe,CAErF,IAAQoB,EAAsCpB,EAAtCoB,SAAAA,CAAWD,EAA2BnB,EAA3BmB,QAAAA,CAAaQ,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAc3B,EAAAA,CAAtCoB,YAAWD,aAEnB,MACE,GAAAR,EAAAC,IAAA,EAACgB,EAAAA,CAAUA,CAAAA,CAACR,UAAWE,IAAWF,EAAWG,IAAAA,SAAgB,EAAGM,UAAU,oBACxE,GAAAlB,EAAAG,GAAA,EAACP,EAAUA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKoB,IAChB,GAAAhB,EAAAG,GAAA,EAACI,EAAWA,CAACE,UAAWG,IAAAA,OAAc,UACpC,GAAAZ,EAAAG,GAAA,EAACgB,EAAAA,EAAiBA,CAAAA,UACfX,QAKX,2IC3BA,IAAMY,EAAmB,CAAEC,MAAAA,EAAAA,EAAKA,EAEnBC,EAAgBC,EAAAA,aAAmB,CAACH,GAa1C,SAASD,EAAkB9B,CAAmB,CAAE,CACrD,IAAMmB,EAAenB,EAAbmB,QAAAA,CACR,MACE,GAAAgB,EAAAvB,IAAA,EAACqB,EAAcG,QAAQ,EAACC,MAAON,YAC5BZ,EACD,GAAAgB,EAAArB,GAAA,EAACwB,EAAAA,EAAcA,CAAAA,CACbC,SAAS,YACTC,UAAW,IAEXC,YAAW,GACXC,aAAY,GAGZC,aAAY,GACZC,MAAM,cAId,+MCxBO,SAASC,EAAQ7C,CAAoB,CAAe,CACzD,IAAQoB,EAA2BpB,EAA3BoB,SAAAA,CAAW0B,EAAgB9C,EAAhB8C,IAAAA,CAAMC,EAAU/C,EAAV+C,KAAAA,CACnBC,EAASF,GAAQ,QAAUA,EAC3BG,EAAUF,GAAS,SAAWA,EAC9BG,EAAoB5B,IACxBF,EACAG,IAAAA,SAAgB,CAChByB,GAAUzB,GAAM,CAACyB,EAAO,CACxBC,GAAW1B,GAAM,CAAC0B,EAAQ,EAE5B,MAAO,GAAAtC,EAAAG,GAAA,EAACqC,MAAAA,CAAI/B,UAAW8B,GACzB,wBCLO,SAASE,EAAapD,CAAyB,CAAe,CACnE,IAAQoB,EAA0EpB,EAA1EoB,SAAAA,CAAWiC,EAA+DrD,EAA/DqD,WAAAA,CAAaC,EAAkDtD,EAAlDsD,YAAAA,CAAcC,EAAoCvD,EAApCuD,QAAAA,CAAUC,EAA0BxD,EAA1BwD,EAAAA,CAAAA,EAA0BxD,EAAtByD,IAAAA,CAAaC,EAAS1D,EAAT0D,IAAAA,CACnEC,EAAOH,GAAM,CAAC,KAAMA,EAAG,CAACI,MAAM,CAAC,SAACC,CAAAA,CAAAA,OAAM,iBAAOA,IAAgBxD,IAAI,CAAC,KAClE6C,EAAoB5B,IACxBF,EACAG,IAAAA,SAAgB,CAChBmC,GAAQnC,GAAM,CAAC,QAAUmC,EAAK,CAC9BH,GAAYhC,IAAAA,QAAe,CAC3BoC,GAAQpC,GAAM,CAACoC,EAAK,CACpBF,KAR0DA,IAAAA,GAAWK,GAQ7DvC,IAAAA,MAAa,EAEvB,MACE,GAAAZ,EAAAG,GAAA,EAACqC,MAAAA,CAAI/B,UAAW8B,WACd,GAAAvC,EAAAG,GAAA,EAAC+B,EAAOA,CAACzB,UAAWG,IAAAA,OAAc,CAAEuB,KAAMO,EAAaN,MAAOO,KAGpE,kCQlBO,SAASS,EAAmB/D,CAA+B,CAAe,CAC/E,IACEoB,EAQEpB,EARFoB,SAAAA,CACA4C,EAOEhE,EAPFgE,gBAAAA,CACA7C,EAMEnB,EANFmB,QAAAA,CACAM,EAKEzB,EALFyB,IAAAA,CACAwC,EAIEjE,EAJFiE,YAAAA,CACAC,EAGElE,EAHFkE,UAAAA,CACAC,EAEEnE,EAFFmE,iBAAAA,CACAC,EACEpE,EADFoE,MAAAA,CAEF,MACE,GAAAzD,EAAAG,GAAA,EAACqC,MAAAA,CACC/B,UAAWE,IACTF,EACAG,IAAAA,SAAgB,CAChB6C,GAAU7C,IAAAA,MAAa,CACvBE,GAAQF,IAAAA,IAAW,CACnB4C,GAAqB5C,IAAAA,iBAAwB,WAG/C,GAAAZ,EAAAG,GAAA,EAACqC,MAAAA,CACC/B,UAAWE,IACT0C,EACAzC,IAAAA,OAAc,CACdE,GAAQF,IAAAA,IAAW,CACnB0C,GAAgB1C,IAAAA,YAAmB,CACnC2C,GAAc3C,IAAAA,UAAiB,WAGhCJ,KAIT,wBCnCO,SAASE,EAAMrB,CAAkB,CAAe,CACrD,IAAAqE,EAA2FrE,EAAnFwB,GAAAA,CAAaJ,EAAsEpB,EAAtEoB,SAAAA,CAAW4C,EAA2DhE,EAA3DgE,gBAAAA,CAAkB7C,EAAyCnB,EAAzCmB,QAAAA,CAAUM,EAA+BzB,EAA/ByB,IAAAA,CAAMwC,EAAyBjE,EAAzBiE,YAAAA,CAAcG,EAAWpE,EAAXoE,MAAAA,CAC1EE,EAAc,CAClBlD,UAAWE,IAAWF,EAAWG,IAAAA,SAAgB,CAAE6C,GAAU7C,IAAAA,MAAa,CAC5E,EACMgD,EACJ,GAAA5D,EAAAG,GAAA,EAACqC,MAAAA,CACC/B,UAAWE,IACT0C,EACAzC,IAAAA,OAAc,CACdE,GAAQF,IAAAA,IAAW,CACnB0C,GAAgB1C,IAAAA,YAAmB,WAGpCJ,IAGL,OAAOe,EAAAA,aAAmB,CAhBlBV,KAAAA,IAAAA,EAAM,MAAA6C,CAAA,CAgBkBC,EAAaC,EAC/C,kGIjCO,SAASC,EAAaC,CAAiB,CAAU,CACtD,IAAQC,EAAiCxE,EAAAA,UAAvBwE,CAElB,MADc,CAACD,EAD0BvE,EAAAA,KAAhBM,CACW,CAACoD,MAAM,CAACe,SAAStE,IAAI,CAACqE,EAE5D,mBCVAE,EAAAC,OAAA,EAAkB,4DCAlBD,EAAAC,OAAA,EAAkB,6GCAlBD,EAAAC,OAAA,EAAkB,6ZCAlBD,EAAAC,OAAA,EAAkB,sTCAlBD,EAAAC,OAAA,EAAkB,uWCAlBD,EAAAC,OAAA,EAAkB","sources":["webpack://_N_E/./src/layout/HtmlHeader/HtmlHeader.tsx","webpack://_N_E/./src/layout-components/PageContent/PageContent.tsx","webpack://_N_E/./src/layout/GenericPageLayout/GenericPageLayout.tsx","webpack://_N_E/./src/ui-elements/Elements/Toasts/Toasts.tsx","webpack://_N_E/./src/ui-elements/Elements/Spinner/Spinner.tsx","webpack://_N_E/./src/ui-elements/Elements/LoaderSplash/LoaderSplash.tsx","webpack://_N_E/./src/ui-elements/Elements/index.ts","webpack://_N_E/./src/ui-elements/Forms/Select/Select.tsx","webpack://_N_E/./src/ui-elements/Forms/index.ts","webpack://_N_E/./src/ui-elements/Page/PageSectionHeader/PageSectionHeader.tsx","webpack://_N_E/./src/ui-elements/Page/ArticlesListPageSectionHeader/ArticlesListPageSectionHeader.tsx","webpack://_N_E/./src/ui-elements/Page/DynamicScroller/DynamicScroller.tsx","webpack://_N_E/./src/ui-elements/Page/DynamicScroller/index.ts","webpack://_N_E/./src/ui-elements/Page/PageSectionWrapper/PageSectionWrapper.tsx","webpack://_N_E/./src/ui-elements/Page/Panel/Panel.tsx","webpack://_N_E/./src/ui-elements/Page/withRouterProps/withRouterProps.tsx","webpack://_N_E/./src/ui-elements/Page/index.ts","webpack://_N_E/./src/ui-elements/index.ts","webpack://_N_E/./src/ui-support/pageUtils.tsx","webpack://_N_E/./src/layout-components/PageContent/PageContent.module.scss","webpack://_N_E/./src/layout/GenericPageLayout/GenericPageLayout.module.scss","webpack://_N_E/./src/ui-elements/Elements/LoaderSplash/LoaderSplash.module.scss","webpack://_N_E/./src/ui-elements/Elements/Spinner/Spinner.module.scss","webpack://_N_E/./src/ui-elements/Page/PageSectionWrapper/PageSectionWrapper.module.scss","webpack://_N_E/./src/ui-elements/Page/Panel/Panel.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["/** @module HtmlHeader\n *  @desc Renders parameters for `head` page part (title, meta-data, etc).\n *  @since 2023.01.26, 23:51\n *  @changed 2023.01.26, 23:51\n */\n\nimport * as React from 'react';\nimport Head from 'next/head';\n\nimport * as siteConfig from '@/config/site';\n\nexport interface THtmlHeaderProps {\n  title?: string;\n  descr?: string;\n  keywords?: string | string[];\n}\n\n/** getPropValue -- Get value from props or site config\n * @param {string} id\n * @param {object} props\n * @return {string}}\n */\nfunction getPropValue(id: keyof THtmlHeaderProps, props: THtmlHeaderProps): string {\n  let val: unknown = props[id]; // Later will be converted to string\n  if (val == null) {\n    val = siteConfig[id];\n  }\n  if (val && Array.isArray(val)) {\n    val = val.join(', ');\n  }\n  return String(val);\n}\n\nexport default function HtmlHeader(props: THtmlHeaderProps): JSX.Element {\n  const title = getPropValue('title', props);\n  const descr = getPropValue('descr', props);\n  const keywords = getPropValue('keywords', props);\n  return (\n    <Head>\n      <title>{title}</title>\n      <meta name=\"title\" content={title} />\n      <meta name=\"description\" content={descr} />\n      <meta name=\"keywords\" content={keywords} />\n    </Head>\n  );\n}\n","/** @module PageContent\n *  @since 2023.01.27, 16:20\n *  @changed 2023.01.27, 19:13\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport { TReactContent } from '@/utils/react-types';\nimport { Panel } from '@/ui-elements';\n\nimport styles from './PageContent.module.scss';\n\ninterface TPageContentProps {\n  className?: string;\n  children?: TReactContent;\n}\n\nexport default function PageContent(props: TPageContentProps): JSX.Element {\n  const { children, className } = props;\n  return (\n    <Panel className={classnames(className, styles.container)} tag=\"section\" flex>\n      {children}\n    </Panel>\n  );\n}\n","/** @module GenericPageLayout\n *  @desc Renders parameters for `head` page part (title, meta-data, etc).\n *  @since 2023.01.26, 23:51\n *  @changed 2023.03.04, 16:02\n */\n\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport { Typography } from '@mui/material';\n\nimport { WithToastsWrapper } from '@/ui-elements/Elements/Toasts/Toasts';\nimport { TReactContent } from '@/utils/react-types';\nimport { THtmlHeaderProps } from '@/layout/HtmlHeader/HtmlHeader';\nimport HtmlHeader from '@/layout/HtmlHeader';\nimport PageContent from '@/layout-components/PageContent';\n\nimport styles from './GenericPageLayout.module.scss';\n\nexport interface TGenericPageLayoutProps extends THtmlHeaderProps {\n  className?: string;\n  children?: TReactContent;\n}\n\nexport default function GenericPageLayout(props: TGenericPageLayoutProps): JSX.Element {\n  // NOTE: Get props from nextjs (as `pageProps`)\n  const { className, children, ...restProps } = props;\n  // prettier-ignore\n  return (\n    <Typography className={classnames(className, styles.container)} component=\"article\">\n      <HtmlHeader {...restProps} />\n      <PageContent className={styles.content}>\n        <WithToastsWrapper>\n          {children}\n        </WithToastsWrapper>\n      </PageContent>\n    </Typography>\n  );\n}\n","/** @module Toasts\n *  @since 2023.01.27, 20:59\n *  @changed 2023.02.16, 23:55\n */\n\nimport React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst toastContextData = { toast };\n\nexport const ToastsContext = React.createContext(toastContextData);\n\nexport { toast };\n\ninterface TToastsProps {\n  children: React.ReactNode;\n}\n\nexport function useToast() {\n  const toastsContext = React.useContext(ToastsContext);\n  return toastsContext.toast;\n}\n\nexport function WithToastsWrapper(props: TToastsProps) {\n  const { children } = props;\n  return (\n    <ToastsContext.Provider value={toastContextData}>\n      {children}\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        // hideProgressBar\n        newestOnTop\n        closeOnClick\n        // pauseOnFocusLoss\n        // draggable\n        pauseOnHover\n        theme=\"colored\"\n      />\n    </ToastsContext.Provider>\n  );\n}\n","/** @module Spinner\n *  @since 2023.01.27, 20:59\n *  @changed 2023.01.27, 21:24\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport styles from './Spinner.module.scss';\n\nexport type TSpinnerSize = 'small' | 'medium' | 'large';\nexport type TSpinnerColor = 'primary' | 'white' | 'black';\n\ninterface TSpinnerProps {\n  className?: string;\n  size?: TSpinnerSize;\n  color?: TSpinnerColor;\n}\n\nexport function Spinner(props: TSpinnerProps): JSX.Element {\n  const { className, size, color } = props;\n  const sizeId = size && 'size_' + size;\n  const colorId = color && 'color_' + color;\n  const resultedClassName = classnames(\n    className,\n    styles.container,\n    sizeId && styles[sizeId],\n    colorId && styles[colorId],\n  );\n  return <div className={resultedClassName} />;\n}\n","/** @module LoaderSplash\n *  @since 2023.01.27, 21:26\n *  @changed 2023.02.15, 22:08\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport { Spinner, TSpinnerSize, TSpinnerColor } from '../Spinner';\n\nimport styles from './LoaderSplash.module.scss';\n\ntype TBackground = true | 'page' | 'white' | 'gray' | 'neutral' | 'primary';\ntype TMode = 'cover';\n\ninterface TLoaderSplashProps {\n  className?: string;\n  spinnerSize?: TSpinnerSize;\n  spinnerColor?: TSpinnerColor;\n  fullSize?: boolean;\n  bg?: TBackground;\n  show?: boolean;\n  mode?: TMode;\n}\n\nexport function LoaderSplash(props: TLoaderSplashProps): JSX.Element {\n  const { className, spinnerSize, spinnerColor, fullSize, bg, show = true, mode } = props;\n  const bgId = bg && ['bg', bg].filter((x) => typeof x === 'string').join('_');\n  const resultedClassName = classnames(\n    className,\n    styles.container,\n    mode && styles['mode_' + mode],\n    fullSize && styles.fullSize,\n    bgId && styles[bgId],\n    show || styles.hidden,\n  );\n  return (\n    <div className={resultedClassName}>\n      <Spinner className={styles.spinner} size={spinnerSize} color={spinnerColor} />\n    </div>\n  );\n}\n","export * from './LoaderSplash';\nexport * from './Spinner';\nexport * from './Toasts';\n","/** @module Select\n *  @since 2023.02.02, 06:43\n *  @changed 2023.02.02, 06:43\n */\n\nimport React, { useState, useCallback, useMemo, useEffect } from 'react';\nimport classnames from 'classnames';\n\nimport styles from './Select.module.scss';\n\nexport interface TSelectOption<T> {\n  id: T;\n  text: string;\n}\nexport type TSelectOptions<T> = TSelectOption<T>[];\n\ninterface TSelectProps<T> {\n  className?: string;\n  options: TSelectOptions<T>;\n  defaultSelected?: T;\n  selected?: T;\n  onChange?: (id: T) => void;\n}\n\ninterface TMemo {\n  isOpen: boolean;\n}\n\nconst hasDocument = typeof document !== 'undefined';\n\nexport function Select<T = string>(props: TSelectProps<T>): JSX.Element {\n  const { className, options, selected, defaultSelected, onChange } = props;\n  const [currentId, setCurrentId] = useState<T | undefined>(selected || defaultSelected);\n  useEffect(() => {\n    setCurrentId(selected);\n  }, [selected]);\n  const text = useMemo(() => {\n    const found = options.find(({ id }) => id === currentId);\n    return found?.text;\n  }, [currentId, options]);\n  const memo = useMemo<TMemo>(() => ({ isOpen: false }), []);\n  const [isOpen, setOpen] = useState(false);\n\n  const setCurrentIdHandler = useCallback(\n    (ev: React.MouseEvent<HTMLDivElement>) => {\n      const { currentTarget } = ev;\n      const id = currentTarget.id as T;\n      setCurrentId(id);\n      if (onChange) {\n        onChange(id);\n      }\n    },\n    [onChange],\n  );\n\n  const optionsContent = useMemo(() => {\n    return options.map(({ id, text }) => {\n      const key = String(id);\n      return (\n        <div\n          key={key}\n          id={key}\n          className={classnames(styles.item, id === currentId && styles.selected)}\n          onClick={setCurrentIdHandler}\n        >\n          {text}\n        </div>\n      );\n    });\n  }, [options, currentId, setCurrentIdHandler]);\n\n  const onOutsideClick = useCallback(() => {\n    const { isOpen } = memo;\n    // Hide if clicked outside...\n    if (isOpen) {\n      setOpen(false);\n    }\n  }, [memo]);\n\n  useEffect(() => {\n    const prevOpen = memo.isOpen;\n    memo.isOpen = isOpen;\n    if (isOpen && !prevOpen && hasDocument) {\n      // Register callback on body\n      setTimeout(() => {\n        // Delay for avoid instant handler invoking\n        document.addEventListener('click', onOutsideClick);\n      }, 0);\n      return () => {\n        document.removeEventListener('click', onOutsideClick);\n      };\n    }\n    memo.isOpen = isOpen;\n  }, [memo, isOpen, onOutsideClick]);\n\n  const toggle = useCallback(\n    (ev: React.MouseEvent<HTMLDivElement>) => {\n      if (isOpen) {\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n      setOpen(!isOpen);\n    },\n    [isOpen],\n  );\n\n  const resultedClassName = classnames(className, styles.container, isOpen && styles.open);\n\n  return (\n    <div className={resultedClassName}>\n      <div onClick={toggle} className={styles.control}>\n        <span className={styles.controlValue}>{text}</span>\n        <span className={styles.controlIcon}>\n          <span className={styles.controlIconTriangle} />\n        </span>\n      </div>\n      <div className={styles.dropdown}>{optionsContent}</div>\n    </div>\n  );\n}\n","export * from './Select';\n","/** @module PageSectionHeader\n *  @since 2023.02.01, 18:01\n *  @changed 2023.02.01, 18:19\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport { TReactContent } from '@/utils/react-types';\n\nimport styles from './PageSectionHeader.module.scss';\n\nexport interface TPageSectionHeaderProps {\n  title?: TReactContent;\n  description?: TReactContent;\n  children?: TReactContent;\n  className?: string;\n  titleClassName?: string;\n  descriptionClassName?: string;\n  padded?: boolean;\n}\n\nexport function PageSectionHeader(props: TPageSectionHeaderProps): JSX.Element {\n  const { className, titleClassName, descriptionClassName, title, description, children, padded } =\n    props;\n  const hasDescr = !!(description || children);\n  const descrContent = hasDescr && (\n    <div className={classnames(descriptionClassName, styles.description)}>\n      {description || children}\n    </div>\n  );\n  return (\n    <div className={classnames(className, styles.container, padded && styles.padded)}>\n      <h1 className={classnames(titleClassName, styles.title)}>{title}</h1>\n      {descrContent}\n    </div>\n  );\n}\n","/** @module ArticlesListPageSectionHeader\n *  @since 2023.02.02, 06:10\n *  @changed 2023.02.02, 06:10\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport { TReactContent } from '@/utils/react-types';\nimport { PageSectionHeader, TPageSectionHeaderProps } from '../PageSectionHeader';\n\nimport styles from './ArticlesListPageSectionHeader.module.scss';\n\ninterface TArticlesListPageSectionHeaderProps extends TPageSectionHeaderProps {\n  extraBlock?: TReactContent;\n  className?: string;\n  wrapperClassName?: string;\n  padded?: boolean;\n}\n\nexport function ArticlesListPageSectionHeader(\n  props: TArticlesListPageSectionHeaderProps,\n): JSX.Element {\n  const { className, wrapperClassName, extraBlock, padded, ...restProps } = props;\n  const hasExtra = !!extraBlock;\n  return (\n    <div className={classnames(className, styles.container, padded && styles.padded)}>\n      <div className={classnames(wrapperClassName, styles.wrapper)}>\n        <div className={classnames(styles.headerBlock)}>\n          <PageSectionHeader {...restProps} />\n        </div>\n        {hasExtra && <div className={classnames(styles.extraBlock)}>{extraBlock}</div>}\n      </div>\n    </div>\n  );\n}\n","/** @module DynamicScroller\n *  @since 2023.02.02, 02:10\n *  @changed 2023.02.02, 03:21\n */\n\nimport React, { useCallback, useEffect, useState } from 'react';\n\nexport interface TWithDynamicScrollerParams {\n  gap?: number;\n}\n\nexport interface TWithDynamicScrollerProps extends JSX.IntrinsicAttributes {\n  isScrolledToEnd?: boolean;\n}\n\ninterface TWithProps {\n  setListContainerRef?: (ref: React.RefObject<HTMLDivElement> | null) => void;\n  isLoading?: boolean;\n}\n\nconst hasWindow = typeof window !== 'undefined';\nconst hasDocument = typeof document !== 'undefined';\n\n// TODO: To move to helpers?\nconst isNodeScrolledToEnd = (node?: HTMLDivElement | null, gap = 0): boolean => {\n  if (!node || !hasWindow) {\n    return false;\n  }\n  const rect = node.getBoundingClientRect();\n  const bottom = rect.bottom - gap;\n  const windowHeight = window.innerHeight;\n  const isInside = bottom <= windowHeight;\n  /* // DEBUG\n   * console.log('[DynamicScroller:isNodeScrolledToEnd]', {\n   *   rect,\n   *   bottom,\n   *   windowHeight,\n   *   isInside,\n   * });\n   */\n  return isInside;\n};\n\nexport function withDynamicScrollerFabric<P extends JSX.IntrinsicAttributes>(\n  params: TWithDynamicScrollerParams,\n): (\n  Component: React.ComponentType<P & TWithDynamicScrollerProps>,\n) => (props: P & TWithProps) => JSX.Element {\n  const { gap } = params;\n  return function withDynamicScroller(\n    Component: React.ComponentType<P & TWithDynamicScrollerProps>,\n  ) {\n    return function DynamicScroller(props: P & TWithProps) {\n      const { setListContainerRef: setParentListContainerRef, isLoading } = props;\n      const [isScrolledToEnd, setIsScrolledToEnd] = useState(false);\n      const [listContainerRef, setListContainerRef] =\n        useState<React.RefObject<HTMLDivElement> | null>(null);\n      const updateStatus = useCallback(() => {\n        const node = listContainerRef?.current;\n        const isInside = isNodeScrolledToEnd(node, gap);\n        setIsScrolledToEnd(isInside);\n      }, [listContainerRef]);\n      // Update state when loading finished\n      useEffect(updateStatus, [isLoading, updateStatus]);\n      useEffect(() => {\n        if (setParentListContainerRef) {\n          setParentListContainerRef(listContainerRef);\n        }\n        if (listContainerRef) {\n          updateStatus();\n        }\n      }, [listContainerRef, setParentListContainerRef, updateStatus]);\n      useEffect(() => {\n        hasDocument && document.addEventListener('scroll', updateStatus);\n        hasWindow && window.addEventListener('resize', updateStatus);\n        return () => {\n          hasDocument && document.removeEventListener('scroll', updateStatus);\n          hasWindow && window.removeEventListener('resize', updateStatus);\n        };\n      });\n      return (\n        <Component\n          {...props}\n          isScrolledToEnd={isScrolledToEnd}\n          setListContainerRef={setListContainerRef}\n        />\n      );\n    };\n  };\n}\n","export * from './DynamicScroller';\n","/** @module PageSectionWrapper\n *  @since 2023.02.01, 18:01\n *  @changed 2023.02.07, 20:42\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport { TReactContent } from '@/utils/react-types';\n\nimport styles from './PageSectionWrapper.module.scss';\n\ninterface TPageSectionWrapperProps {\n  className?: string;\n  wrapperClassName?: string;\n  children?: TReactContent;\n  flex?: boolean;\n  flexVertical?: boolean;\n  flexCenter?: boolean;\n  fullSizeFlexChild?: boolean;\n  padded?: boolean;\n}\n\nexport function PageSectionWrapper(props: TPageSectionWrapperProps): JSX.Element {\n  const {\n    className,\n    wrapperClassName,\n    children,\n    flex,\n    flexVertical,\n    flexCenter,\n    fullSizeFlexChild,\n    padded,\n  } = props;\n  return (\n    <div\n      className={classnames(\n        className,\n        styles.container,\n        padded && styles.padded,\n        flex && styles.flex,\n        fullSizeFlexChild && styles.fullSizeFlexChild,\n      )}\n    >\n      <div\n        className={classnames(\n          wrapperClassName,\n          styles.wrapper,\n          flex && styles.flex,\n          flexVertical && styles.flexVertical,\n          flexCenter && styles.flexCenter,\n        )}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n","/** @module Panel\n *  @since 2023.01.27, 16:47\n *  @changed 2023.01.27, 19:24\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport { TReactContent } from '@/utils/react-types';\n\nimport styles from './Panel.module.scss';\n\ninterface TPanelProps {\n  tag?: string;\n  className?: string;\n  wrapperClassName?: string;\n  children?: TReactContent;\n  flex?: boolean;\n  flexVertical?: boolean;\n  padded?: boolean;\n}\n\nexport function Panel(props: TPanelProps): JSX.Element {\n  const { tag = 'div', className, wrapperClassName, children, flex, flexVertical, padded } = props;\n  const renderProps = {\n    className: classnames(className, styles.container, padded && styles.padded),\n  };\n  const renderContent = (\n    <div\n      className={classnames(\n        wrapperClassName,\n        styles.wrapper,\n        flex && styles.flex,\n        flexVertical && styles.flexVertical,\n      )}\n    >\n      {children}\n    </div>\n  );\n  return React.createElement(tag, renderProps, renderContent);\n}\n","/** @module withRouterProps\n *  @desc Wrapping any component with some router-originated properties.\n *  @since 2023.02.01, 19:22\n *  @changed 2023.02.02, 05:39\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { NextRouter, useRouter } from 'next/router';\nimport queryString, { ParsedQuery } from 'query-string';\n\ntype TQuery = ParsedQuery<string>; // Record<string, string | undefined>;\n\nexport interface TWithRouterProps {\n  routerReady: boolean;\n  routerRoot: boolean;\n  routerPath: string;\n  routerQuery: TQuery;\n  router: NextRouter;\n}\nexport function withRouterProps<P extends JSX.IntrinsicAttributes>(\n  Component: React.ComponentType<P & TWithRouterProps>,\n) {\n  return function WithRouterProps(props: P) {\n    const router = useRouter();\n    const [routerReady, setRouterReady] = useState<boolean>(false);\n    const [routerRoot, setRouterRoot] = useState<boolean>(false);\n    const [routerPath, setRouterPath] = useState<string>('');\n    const [routerQuery, setRouterQuery] = useState<TQuery>({});\n    useEffect(() => {\n      const { asPath } = router;\n      const routerRoot = !asPath || asPath === '/';\n      const query = queryString.parse(router.asPath.split(/\\?/)[1]) as TQuery;\n      setRouterPath(asPath);\n      setRouterRoot(routerRoot);\n      setRouterQuery(query);\n      setRouterReady(true);\n    }, [router]);\n    return routerReady ? (\n      <Component\n        {...props}\n        routerReady={routerReady}\n        routerRoot={routerRoot}\n        routerPath={routerPath}\n        routerQuery={routerQuery}\n        router={router}\n      />\n    ) : null;\n  };\n}\n","export * from './ArticlesListPageSectionHeader';\nexport * from './DynamicScroller';\nexport * from './PageSectionHeader';\nexport * from './PageSectionWrapper';\nexport * from './Panel';\nexport * from './withRouterProps';\n","export * from './Elements';\nexport * from './Forms';\nexport * from './Page';\n","/** @module pageUtils\n *  @since 2022.02.02, 19:37\n *  @changed 2022.02.02, 19:37\n */\n\nimport * as siteConfig from '@/config/site';\n\nexport function subPageTitle(pageTitle: string): string {\n  const { titleDelim, title: siteTitle } = siteConfig;\n  const title = [pageTitle, siteTitle].filter(Boolean).join(titleDelim);\n  return title;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PageContent_container__1_BG_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GenericPageLayout_container__6wfO_\",\"content\":\"GenericPageLayout_content__ifJ57\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoaderSplash_container__MZKgW\",\"mode_cover\":\"LoaderSplash_mode_cover__udNQ5\",\"hidden\":\"LoaderSplash_hidden__x1_jX\",\"bg\":\"LoaderSplash_bg__PtkAS\",\"bg_page\":\"LoaderSplash_bg_page__l5un8\",\"bg_white\":\"LoaderSplash_bg_white__5EfdH\",\"bg_primary\":\"LoaderSplash_bg_primary__rfqeS\",\"bg_neutral\":\"LoaderSplash_bg_neutral__1V6Zv\",\"bg_gray\":\"LoaderSplash_bg_gray__s1m_d\",\"fullSize\":\"LoaderSplash_fullSize__iDqr1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Spinner_container__Jnt3L\",\"size_medium\":\"Spinner_size_medium__fCXs5\",\"size_small\":\"Spinner_size_small__r6fQX\",\"size_large\":\"Spinner_size_large___u81e\",\"rotating-spinner\":\"Spinner_rotating-spinner__RnnIP\",\"color_white\":\"Spinner_color_white__88ZcC\",\"color_black\":\"Spinner_color_black__ncVBO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PageSectionWrapper_container__KDuoa\",\"padded\":\"PageSectionWrapper_padded__XDUN8\",\"fullSizeFlexChild\":\"PageSectionWrapper_fullSizeFlexChild__3WzwZ\",\"wrapper\":\"PageSectionWrapper_wrapper__MLTyT\",\"flex\":\"PageSectionWrapper_flex__kz9ef\",\"flexVertical\":\"PageSectionWrapper_flexVertical__EoNgK\",\"flexCenter\":\"PageSectionWrapper_flexCenter__5PuNV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Panel_container__h1PL0\",\"padded\":\"Panel_padded__lEsci\",\"wrapper\":\"Panel_wrapper__gTxrR\",\"flex\":\"Panel_flex__DXPuM\",\"flexVertical\":\"Panel_flexVertical__fzkku\"};"],"names":["getPropValue","id","props","val","siteConfig","Array","isArray","join","String","HtmlHeader","title","descr","keywords","jsx_runtime","jsxs","Head","jsx","meta","name","content","PageContent","children","className","Panel","classnames","styles","tag","flex","GenericPageLayout","restProps","Typography","component","WithToastsWrapper","toastContextData","toast","ToastsContext","React","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","Provider","value","ToastContainer","position","autoClose","newestOnTop","closeOnClick","pauseOnHover","theme","Spinner","size","color","sizeId","colorId","resultedClassName","div","LoaderSplash","spinnerSize","spinnerColor","fullSize","bg","show","mode","bgId","filter","x","_props_show","PageSectionWrapper","wrapperClassName","flexVertical","flexCenter","fullSizeFlexChild","padded","_props_tag","renderProps","renderContent","subPageTitle","pageTitle","titleDelim","Boolean","module","exports"],"sourceRoot":""}