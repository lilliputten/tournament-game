{"version":3,"file":"static/chunks/pages/game-b90c6436a3fb3711.js","mappings":"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","sources":["webpack://_N_E/?cbc4","webpack://_N_E/./src/ui-blocks/GameBlock/GameBlockContent.tsx","webpack://_N_E/./src/components/Game/GamePlaying/GamePlayingContent.tsx","webpack://_N_E/./src/components/Game/Partner/usePartnerData.ts","webpack://_N_E/./src/components/Game/Partner/Partner.tsx","webpack://_N_E/./src/components/Game/QuestionsCard/QuestionsCard.tsx","webpack://_N_E/./src/components/Game/index.ts","webpack://_N_E/./src/components/Game/GameLayout/GameLayout.tsx","webpack://_N_E/./src/components/Game/GamePlaying/GamePlaying.tsx","webpack://_N_E/./src/ui-blocks/withGameSessionWrapper/withGameSessionWrapper.tsx","webpack://_N_E/./src/components/Game/GamePlaying/WrappedGamePlaying.tsx","webpack://_N_E/./src/components/Game/GamePlaying/index.ts","webpack://_N_E/./src/ui-blocks/GameBlock/GameBlock.tsx","webpack://_N_E/./src/ui-blocks/withGamePlayingWrapper/withGamePlayingWrapper.tsx","webpack://_N_E/./src/ui-blocks/GameBlock/WrappedGameBlock.tsx","webpack://_N_E/./src/ui-blocks/GameBlock/index.ts","webpack://_N_E/./src/ui-pages/GamePage.tsx","webpack://_N_E/./src/pages/game.tsx","webpack://_N_E/./src/components/Game/GameLayout/GameLayout.module.scss","webpack://_N_E/./src/components/Game/GamePlaying/GamePlaying.module.scss","webpack://_N_E/./src/components/Game/GamePlaying/GamePlayingContent.module.scss","webpack://_N_E/./src/components/Game/GamePlaying/WrappedGamePlaying.module.scss","webpack://_N_E/./src/components/Game/Partner/Partner.module.scss","webpack://_N_E/./src/components/Game/QuestionsCard/QuestionsCard.module.scss","webpack://_N_E/./src/ui-blocks/GameBlock/GameBlock.module.scss","webpack://_N_E/./src/ui-blocks/GameBlock/GameBlockContent.module.scss","webpack://_N_E/./src/ui-blocks/GameBlock/WrappedGameBlock.module.scss","webpack://_N_E/./src/ui-blocks/withGamePlayingWrapper/GamePlayingWrapper.module.scss","webpack://_N_E/./src/ui-blocks/withGameSessionWrapper/GameSessionWrapper.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/game\",\n      function () {\n        return require(\"private-next-pages/game.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/game\"])\n      });\n    }\n  ","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n// import Button from '@mui/material/Button';\n// import { Stack } from '@mui/system';\nimport classnames from 'classnames';\n\nimport config from '@/config';\nimport { TGameSessionState } from '@/features/GameSession';\n\nimport styles from './GameBlockContent.module.scss';\nimport { TGameParamsState } from '@/features/GameParams';\n\nexport interface TGameBlockProps extends JSX.IntrinsicAttributes {\n  className?: string;\n}\n\nexport type TCb = () => void;\n\nexport function Empty({ reason }: { reason?: string }) {\n  return (\n    <Box data-reason={reason || null} className={classnames(styles.container, styles.Empty)}>\n      {config.build.isDev && reason && <Typography>GameBlock Empty: {reason}</Typography>}\n    </Box>\n  );\n}\n\nexport function GameInfo({\n  partnerName,\n  gameMode,\n}: Pick<TGameSessionState, 'partnerName'> & Pick<TGameParamsState, 'gameMode'>) {\n  return (\n    <Box className={classnames(styles.container, styles.GameReady)}>\n      <Typography variant=\"h5\">Информция об игре (GameBlock)</Typography>\n      {gameMode && <Typography>Режим игры: {gameMode}</Typography>}\n      {partnerName && <Typography>Ваш партнёр: {partnerName}</Typography>}\n      {/*\n      <Typography>\n        Игра запускается...\n      </Typography>\n      */}\n    </Box>\n  );\n}\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport classnames from 'classnames';\n\nimport config from '@/config';\nimport { TGameSessionState } from '@/features/GameSession';\nimport { TGameParamsState } from '@/features/GameParams';\nimport { TQuestions } from '@/core/types';\n\nimport styles from './GamePlayingContent.module.scss';\n\nexport interface TGamePlayingProps extends JSX.IntrinsicAttributes {\n  className?: string;\n}\n\nexport type TCb = () => void;\n\nexport function Empty({ reason }: { reason?: string }) {\n  return (\n    <Box data-reason={reason || null} className={classnames(styles.container, styles.Empty)}>\n      {config.build.isDev && reason && <Typography>GamePlaying Empty: {reason}</Typography>}\n    </Box>\n  );\n}\n\n// DBEUG\nexport function GameInfo({\n  partnerName,\n  partnerToken,\n  questions,\n  gameMode,\n}: Pick<TGameSessionState, 'partnerName' | 'partnerToken'> &\n  Pick<TGameParamsState, 'gameMode'> & { questions?: TQuestions }) {\n  return (\n    <Box className={classnames(styles.container, styles.GameReady)}>\n      <Typography variant=\"h5\">Информция об игре (GamePlaying)</Typography>\n      {gameMode && <Typography>Режим игры: {gameMode}</Typography>}\n      {partnerName && (\n        <Typography>\n          Ваш партнёр: {partnerName} ({partnerToken})\n        </Typography>\n      )}\n      {questions && (\n        <Typography>Вопросы: {questions.map(({ question }) => question).join(' | ')}</Typography>\n      )}\n    </Box>\n  );\n}\n","import React from 'react';\n\nimport { TGameSessionState } from '@/features/GameSession';\nimport { TGameParamsState } from '@/features/GameParams';\nimport {\n  useGameParamsToken,\n  useGameParamsUserName,\n  useGameSessionPartnerName,\n  useGameSessionPartnerToken,\n} from '@/core';\n\nexport interface TPartnerData {\n  name: TGameSessionState['partnerName'] | TGameParamsState['userName'];\n  token: TGameSessionState['partnerToken'] | TGameParamsState['token'];\n}\nexport type TUsePartnerDataHook = () => TPartnerData;\n\nexport function useYourData(): TPartnerData {\n  const token = useGameParamsToken();\n  const name = useGameParamsUserName();\n  const data: TPartnerData = React.useMemo(() => {\n    return { token, name };\n  }, [token, name]);\n  return data;\n}\n\nexport function usePartnerData(): TPartnerData {\n  const token = useGameSessionPartnerToken();\n  const name = useGameSessionPartnerName();\n  const data: TPartnerData = React.useMemo(() => {\n    return { token, name };\n  }, [token, name]);\n  return data;\n}\n\nexport function usePartnerDataHook(self?: boolean): TUsePartnerDataHook {\n  return self ? useYourData : usePartnerData;\n}\n","/** @module Partner\n *  @since 2023.02.15, 19:54\n *  @changed 2023.02.16, 02:30\n */\n\nimport React from 'react';\n// import Box from '@mui/material/Box';\n// import Typography from '@mui/material/Typography';\nimport { Box, Stack, Typography } from '@mui/material';\nimport classnames from 'classnames';\n\nimport { stringToHash } from '@/utils';\nimport { useYourData, usePartnerData } from './usePartnerData';\nimport { TQuestions, useQuestions } from '@/core';\n\nimport styles from './Partner.module.scss';\n\nexport interface TPartnerProps extends JSX.IntrinsicAttributes {\n  className?: string;\n  self?: boolean;\n}\n\n/* // DEBUG\n * const demoQuestions: TQuestions = [\n *   { answers: [{ text: 'Answer text 1' }], question: 'Question 1' },\n *   { answers: [{ text: 'Answer text 1' }], question: 'Question 1' },\n *   { answers: [{ text: 'Answer text 1' }], question: 'Question 1' },\n *   { answers: [{ text: 'Answer text 1' }], question: 'Question 1' },\n *   { answers: [{ text: 'Answer text 1' }], question: 'Question 1' },\n *   { answers: [{ text: 'Answer text 1' }], question: 'Question 1' },\n *   { answers: [{ text: 'Answer text 1' }], question: 'Question 1' },\n *   { answers: [{ text: 'Answer text 1' }], question: 'Question 1' },\n *   { answers: [{ text: 'Answer text 1' }], question: 'Question 1' },\n *   { answers: [{ text: 'Answer text 1' }], question: 'Question 1' },\n *   { answers: [{ text: 'Answer text 1' }], question: 'Question 1' },\n *   { answers: [{ text: 'Answer text 1' }], question: 'Question 1' },\n *   { answers: [{ text: 'Answer text 1' }], question: 'Question 1' },\n *   { answers: [{ text: 'Answer text 1' }], question: 'Question 1' },\n *   { answers: [{ text: 'Answer text 1' }], question: 'Question 1' },\n *   { answers: [{ text: 'Answer text 1' }], question: 'Question 1' },\n * ];\n */\n\nexport function Partner(props: TPartnerProps): JSX.Element | null {\n  const { className, self } = props;\n  // Data receiver hook: for self record or remote partner\n  const useData = React.useMemo(() => (self ? useYourData : usePartnerData), [self]);\n  const data = useData();\n  const { name } = data;\n  const selfId = self ? 'self' : 'other';\n  const questions: TQuestions | undefined = useQuestions();\n  // const questions = demoQuestions; // DEBUG\n  /* console.log('[Partner]', {\n   *   questions,\n   *   // token,\n   *   name,\n   *   data,\n   *   self,\n   *   useData,\n   * });\n   */\n  const questionsContent = React.useMemo(() => {\n    if (!questions || !questions.length) {\n      return null;\n    }\n    return questions.map((q, idx) => {\n      const { id } = q;\n      const key = id || 'Q-' + idx; // + '-' + stringToHash(String(q.question || '')));\n      // TODO: Correct & wrong styles\n      return <Box key={key} id={key} className={classnames(styles.question)} />;\n    });\n  }, [questions]);\n  return (\n    <Box className={classnames(className, styles.container, styles[selfId])}>\n      <Box className={classnames(styles.partner)}>\n        <Typography className={classnames(styles.name)} textAlign=\"left\" gutterBottom>\n          {name}\n        </Typography>\n        {questionsContent && (\n          <Stack\n            className={classnames(styles.questionsBox)}\n            flexDirection=\"row\"\n            flexWrap=\"wrap\"\n            gap=\"6px\"\n          >\n            {questionsContent}\n          </Stack>\n        )}\n      </Box>\n    </Box>\n  );\n}\n","/** @module QuestionsCard\n *  @since 2023.02.15, 19:54\n *  @changed 2023.02.16, 02:30\n */\n\nimport React from 'react';\nimport { Box, Button, Stack, Typography } from '@mui/material';\nimport classnames from 'classnames';\n\nimport { useQuestions } from '@/core';\n\nimport styles from './QuestionsCard.module.scss';\n\nexport interface TQuestionsCardProps extends JSX.IntrinsicAttributes {\n  className?: string;\n}\n\nexport function QuestionsCard(props: TQuestionsCardProps) {\n  const { className } = props;\n  const questions = useQuestions();\n  const questionsCount = questions?.length || 0;\n  const currentQuestionNo = 0;\n  const currentQuestion = questions && questions[currentQuestionNo];\n  const questionText = currentQuestion?.question;\n  const answers = currentQuestion?.answers;\n  const progress = questionsCount && (currentQuestionNo + 1) / questionsCount;\n  const percents = String(Math.round(progress * 100)) + '%';\n  // Data receiver hook: for self record or remote partner\n  console.log('[QuestionsCard]', {\n    questions,\n    currentQuestionNo,\n    currentQuestion,\n    questionsCount,\n    questionText,\n    answers,\n    progress,\n    percents,\n  });\n  const answersContent = React.useMemo(() => {\n    if (!answers || !answers.length) {\n      return null;\n    }\n    return answers.map((a, idx) => {\n      const { text } = a;\n      const key = 'A-' + idx;\n      // TODO: Correct & wrong styles\n      // TODO: onClick for active answers\n      return (\n        <Box key={key} id={key} className={classnames(styles.answer, styles.answerActive)}>\n          <Typography className={classnames(styles.answerText)} textAlign=\"left\">\n            {text}\n          </Typography>\n        </Box>\n      );\n    });\n  }, [answers]);\n  if (!questionsCount) {\n    return null;\n  }\n  return (\n    <Stack className={classnames(className, styles.container)}>\n      <Stack className={classnames(styles.infoRow)} flexDirection=\"row\" my={1}>\n        <Typography textAlign=\"left\">Вопрос {currentQuestionNo + 1}</Typography>\n        <Typography textAlign=\"right\" flex={1}>\n          из {questionsCount}\n        </Typography>\n      </Stack>\n      <Box className={classnames(styles.progressRow)}>\n        <Box className={classnames(styles.progressBar)} sx={{ width: percents }} />\n      </Box>\n      <Box className={classnames(styles.questionRow)} my={1} mt={2}>\n        <Typography variant=\"h5\">{questionText}</Typography>\n      </Box>\n      <Box className={classnames(styles.answersRow)} my={1}>\n        {answersContent}\n      </Box>\n      <Box className={classnames(styles.actionsRow)} my={2}>\n        <Button className=\"FixMuiButton\" variant=\"contained\">\n          <span className=\"Text\">Следующий вопрос / Проверить</span>\n        </Button>\n      </Box>\n    </Stack>\n  );\n}\n","export * from './GameLayout';\nexport * from './GamePlaying';\nexport * from './Partner';\nexport * from './QuestionsCard';\n","/** @module GameLayout\n *  @since 2023.02.15, 19:54\n *  @changed 2023.02.15, 22:37\n */\n\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport classnames from 'classnames';\nimport { Stack } from '@mui/material';\n\nimport { useGameParamsGameMode } from '@/core';\nimport { Partner, QuestionsCard } from '@/components/Game';\n\nimport styles from './GameLayout.module.scss';\n\nexport interface TGameLayoutProps extends JSX.IntrinsicAttributes {\n  className?: string;\n}\n\nexport function GameLayout(props: TGameLayoutProps): JSX.Element | null {\n  const { className } = props;\n  /* // @see:\n   * - [Школа/ сервисы – Figma](https://www.figma.com/file/C1ylOhuxpqwMitM11JHE8Y/%D0%A8%D0%BA%D0%BE%D0%BB%D0%B0%2F-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B?node-id=2323%3A1061&t=vjG6YjAtpOyUFoIc-0)\n   * - [React Typography component - Material UI](https://mui.com/material-ui/react-typography/)\n   */\n  const gameMode = useGameParamsGameMode();\n  const isMulti = gameMode === 'multi';\n  return (\n    <Box className={classnames(className, styles.container)}>\n      <Stack className={classnames(styles.partnersBox)} gap={2}>\n        <Typography className={classnames(styles.partnersTitle)} variant=\"h6\" textAlign=\"left\">\n          Участники\n        </Typography>\n        {isMulti && <Partner />}\n        <Partner self />\n      </Stack>\n      <Box className={classnames(styles.gameBox)}>\n        <QuestionsCard className={classnames(styles.gameBox)} />\n      </Box>\n    </Box>\n  );\n}\n","/** @module GamePlaying\n *  @since 2023.02.14, 14:52\n *  @changed 2023.02.15, 21:30\n */\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Box from '@mui/material/Box';\nimport classnames from 'classnames';\n\nimport {\n  // useAppDispatch,\n  useGameParamsGameMode,\n  useGameParamsToken,\n  useGameParamsUserName,\n  // useGameSessionPartnerName,\n  useGameSessionPartnerToken,\n  useGameSessionGameToken,\n  useGameWaitingIsGameStarted,\n  useGameSessionIsPlaying,\n  useQuestions,\n} from '@/core';\n// import { actions as gameParamsActions } from '@/features/GameParams/reducer';\n// import { actions as gameSessionActions } from '@/features/GameSession/reducer';\n// import { gameSessionStartThunk } from '@/features/GameSession/services';\nimport { Empty } from './GamePlayingContent';\n\nimport styles from './GamePlaying.module.scss';\nimport { GameLayout } from '../GameLayout/GameLayout';\n\nexport interface TGamePlayingProps extends JSX.IntrinsicAttributes {\n  className?: string;\n}\n\nexport function GamePlaying(props: TGamePlayingProps): JSX.Element | null {\n  const { className } = props;\n  /* // @see:\n   * - [Школа/ сервисы – Figma](https://www.figma.com/file/C1ylOhuxpqwMitM11JHE8Y/%D0%A8%D0%BA%D0%BE%D0%BB%D0%B0%2F-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B?node-id=2323%3A1061&t=vjG6YjAtpOyUFoIc-0)\n   * - [React Typography component - Material UI](https://mui.com/material-ui/react-typography/)\n   */\n\n  // const appRootStore = useStore<TRootState>();\n  // const dispatch = useAppDispatch();\n  const router = useRouter();\n\n  const token = useGameParamsToken();\n  const userName = useGameParamsUserName();\n  const gameMode = useGameParamsGameMode();\n\n  // Has game started in GameWaiting?\n  const hasGameStarted = useGameWaitingIsGameStarted();\n\n  // const isStarted = useGameWaitingIsGameStarted();\n\n  const isPlaying = useGameSessionIsPlaying();\n\n  // const partnerName = useGameSessionPartnerName();\n  const partnerToken = useGameSessionPartnerToken();\n  const gameToken = useGameSessionGameToken();\n\n  const questions = useQuestions();\n  const hasQuestions = !!questions;\n\n  const isParamsReady = !!(token && userName && hasGameStarted);\n  const isGameReady = !!(\n    isParamsReady &&\n    gameToken &&\n    hasQuestions &&\n    (gameMode !== 'multi' || partnerToken)\n  );\n\n  // Effect: Game not ready?\n  React.useEffect(() => {\n    // Go to the start page if environment isn't ready yet\n    if (!isGameReady) {\n      router.push('/waiting');\n    }\n  }, [router, isGameReady]);\n\n  const content = React.useMemo(() => {\n    if (!isGameReady) {\n      // Don't render nothing and go to the start page if environment isn't ready yet...\n      return <Empty reason=\"Not ready\" />;\n    } else if (isPlaying) {\n      return <GameLayout />;\n    } else {\n      return <Empty reason=\"Unknown\" />;\n    }\n  }, [isGameReady, isPlaying]);\n\n  return <Box className={classnames(className, styles.container)}>{content}</Box>;\n}\n","/** @module withGameSessionWrapper\n *  @desc Wrapping any component (with GameSessionWrapper)\n *  @since 2023.02.14, 17:35\n *  @changed 2023.02.14, 17:34\n */\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport classnames from 'classnames';\n\nimport {\n  useGameParamsIsLoading,\n  useGameParamsError,\n  useGameSessionIsLoading,\n  useGameSessionError,\n  useGameSessionIsPlaying,\n  useGameSessionIsFinished,\n  // useGameSessionIsFailed,\n} from '@/core/app/app-reducer';\nimport { errorToString } from '@/utils';\nimport { LoaderSplash } from '@/ui-elements';\nimport { Box, Button, Stack, Typography } from '@mui/material';\n\nimport styles from './GameSessionWrapper.module.scss';\n\nexport interface TWithGameSessionWrapperParams {\n  wrapperClassName?: string;\n  errorClassName?: string;\n  showErrorInWrapper?: boolean;\n}\n\nexport interface TWithGameSessionWrapperProps extends JSX.IntrinsicAttributes {\n  error?: Error;\n  isLoading?: boolean;\n  isFinished?: boolean;\n  isPlaying?: boolean;\n  // isFailed?: boolean;\n}\n\nexport function withGameSessionWrapperFabric<P extends JSX.IntrinsicAttributes>(\n  params: TWithGameSessionWrapperParams,\n): (Component: React.ComponentType<P & TWithGameSessionWrapperProps>) => (props: P) => JSX.Element {\n  const { wrapperClassName, errorClassName, showErrorInWrapper = true } = params;\n  return function withGameSessionWrapper<P extends JSX.IntrinsicAttributes>(\n    Component: React.ComponentType<P>,\n  ) {\n    return function GameSessionWrapper(props: P) {\n      const isGameParamsLoading = useGameParamsIsLoading();\n      const gameParamsError = useGameParamsError();\n      const isLoading = useGameSessionIsLoading();\n      const error = useGameSessionError() || gameParamsError;\n      const isFinished = useGameSessionIsFinished();\n      const isPlaying = useGameSessionIsPlaying();\n      // const isFailed = useGameSessionIsFailed();\n      const displayContent = !isGameParamsLoading; // && !isLoading && !error;\n      /* console.log('[withGameSessionWrapper:GameSessionWrapper]', {\n       *   isGameParamsLoading,\n       *   gameParamsError,\n       *   isLoading,\n       *   error,\n       *   displayContent,\n       * });\n       */\n      const router = useRouter();\n      const goToStartPage = React.useCallback(() => {\n        router.push('/');\n      }, [router]);\n      const showSmallLoader = isLoading && isPlaying;\n      const showLargeLoader = isLoading && !isPlaying;\n      return (\n        <div className={classnames(wrapperClassName, styles.container)}>\n          {/* Show error */}\n          {showErrorInWrapper && error && (\n            <Box className={classnames(styles.contentErrorContainer)} m={2}>\n              <Typography className={classnames(errorClassName, styles.contentError)} m={2}>\n                {errorToString(error)}\n              </Typography>\n              <Stack\n                className={styles.actions}\n                spacing={2}\n                direction=\"row\"\n                m={2}\n                justifyContent=\"center\"\n              >\n                <Button className=\"FixMuiButton\" onClick={goToStartPage} variant=\"contained\">\n                  <span className=\"Text\">Начать сначала</span>\n                </Button>\n              </Stack>\n            </Box>\n          )}\n          {displayContent && (\n            <div className={styles.contentContainer}>\n              <Component\n                {...props}\n                error={error}\n                isLoading={isLoading}\n                isFinished={isFinished}\n                isPlaying={isPlaying}\n                // isFailed={isFailed}\n              />\n            </div>\n          )}\n          {/* Show small loader at the end of article items if some data has loaded */}\n          <LoaderSplash\n            className={styles.smallLoader}\n            spinnerSize=\"medium\"\n            // show // Without animations!\n            show={showSmallLoader}\n          />\n          {/* Show large covering loader splash if no data loaded */}\n          <LoaderSplash\n            className={styles.loaderSplash}\n            show={showLargeLoader}\n            spinnerSize=\"large\"\n            bg=\"white\"\n            mode=\"cover\"\n            fullSize\n          />\n        </div>\n      );\n    };\n  };\n}\n","/** @module WrappedGamePlaying\n *  @since 2023.02.14, 14:52\n *  @changed 2023.02.14, 17:34\n */\n\nimport React from 'react';\nimport { compose } from 'redux';\n\nimport { withGameSessionWrapperFabric } from '@/ui-blocks/withGameSessionWrapper';\n\nimport { GamePlaying, TGamePlayingProps } from './GamePlaying';\n\nimport styles from './WrappedGamePlaying.module.scss';\n\n// Export wrapped version\nexport const WrappedGamePlaying = compose<React.FC<TGamePlayingProps>>(\n  withGameSessionWrapperFabric<TGamePlayingProps>({\n    errorClassName: styles.error,\n    wrapperClassName: styles.wrapper,\n  }),\n)(GamePlaying);\n","export * from './GamePlaying';\nexport * from './WrappedGamePlaying';\n","/** @module GameBlock\n *  @desc This component can manage different game screens (main game screen is GamePlaying).\n *  @since 2023.02.14, 14:52\n *  @changed 2023.02.15, 16:56\n */\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Box from '@mui/material/Box';\nimport classnames from 'classnames';\n\nimport { loadQuestionsThunk } from '@/features/Questions/services';\nimport {\n  useAppDispatch,\n  useGameParamsGameMode,\n  useGameParamsToken,\n  useGameParamsUserName,\n  // useGameSessionPartnerName,\n  useGameSessionPartnerToken,\n  useGameSessionGameToken,\n  useGameWaitingIsGameStarted,\n  useGameSessionIsPlaying,\n  useQuestions,\n} from '@/core';\nimport { gameSessionStartThunk } from '@/features/GameSession/services';\nimport {\n  Empty,\n  // GameInfo,\n} from './GameBlockContent';\n\nimport styles from './GameBlock.module.scss';\nimport { GamePlaying } from '@/components/Game/GamePlaying';\n\nexport interface TGameBlockProps extends JSX.IntrinsicAttributes {\n  className?: string;\n}\n\nexport function GameBlock(props: TGameBlockProps): JSX.Element | null {\n  const { className } = props;\n  /* // @see:\n   * - [Школа/ сервисы – Figma](https://www.figma.com/file/C1ylOhuxpqwMitM11JHE8Y/%D0%A8%D0%BA%D0%BE%D0%BB%D0%B0%2F-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B?node-id=2323%3A1061&t=vjG6YjAtpOyUFoIc-0)\n   * - [React Typography component - Material UI](https://mui.com/material-ui/react-typography/)\n   */\n\n  // const appRootStore = useStore<TRootState>();\n  const dispatch = useAppDispatch();\n  const router = useRouter();\n\n  const token = useGameParamsToken();\n  const userName = useGameParamsUserName();\n  const gameMode = useGameParamsGameMode();\n\n  // Has game started in GameWaiting?\n  const hasGameStarted = useGameWaitingIsGameStarted();\n\n  const isPlaying = useGameSessionIsPlaying();\n\n  // const partnerName = useGameSessionPartnerName();\n  const partnerToken = useGameSessionPartnerToken();\n  const gameToken = useGameSessionGameToken();\n\n  const questions = useQuestions();\n  const hasQuestions = !!questions;\n\n  const isParamsReady = !!(token && userName && hasGameStarted);\n  const isGameReady = !!(\n    isParamsReady &&\n    gameToken &&\n    hasQuestions &&\n    (gameMode !== 'multi' || partnerToken)\n  );\n\n  // Effect: Questions...\n  React.useEffect(() => {\n    if (isParamsReady) {\n      dispatch(loadQuestionsThunk());\n    }\n  }, [isParamsReady, dispatch]);\n\n  // Effect: Start game...\n  React.useEffect(() => {\n    if (isParamsReady && !isGameReady) {\n      dispatch(gameSessionStartThunk());\n      // TODO: To use handler on game end?\n    }\n  }, [isParamsReady, isGameReady, dispatch]);\n\n  // Effect: Params not ready?\n  React.useEffect(() => {\n    // Go to the start page if environment isn't ready yet\n    if (!isParamsReady) {\n      router.push('/waiting');\n    }\n  }, [router, isParamsReady]);\n\n  const content = React.useMemo(() => {\n    if (!isGameReady) {\n      // Don't render nothing and go to the start page if environment isn't ready yet...\n      return <Empty reason=\"Not ready\" />;\n    } else if (isPlaying) {\n      return <GamePlaying />;\n      // return <GameInfo partnerName={partnerName} gameMode={gameMode} />;\n    } else {\n      return <Empty reason=\"Unknown\" />;\n    }\n  }, [\n    // partnerName,\n    // gameMode,\n    isGameReady,\n    isPlaying,\n  ]);\n\n  return (\n    <Box className={classnames(className, styles.container)} my={2} flexDirection=\"row\">\n      {content}\n    </Box>\n  );\n}\n","/** @module withGamePlayingWrapper\n *  @desc Wrapping any component (with GamePlayingWrapper)\n *  @since 2023.02.15, 15:55\n *  @changed 2023.02.14, 17:34\n */\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport classnames from 'classnames';\n\nimport {\n  useGameParamsIsLoading,\n  useGameParamsError,\n  useGameSessionIsLoading,\n  useGameSessionError,\n  useGameSessionIsPlaying,\n  useGameSessionIsFinished,\n  useQuestionsIsLoading,\n  useQuestionsError,\n  // useGameSessionIsFailed,\n} from '@/core/app/app-reducer';\nimport { errorToString } from '@/utils';\nimport { LoaderSplash } from '@/ui-elements';\nimport { Box, Button, Stack, Typography } from '@mui/material';\n\nimport styles from './GamePlayingWrapper.module.scss';\n\nexport interface TWithGamePlayingWrapperParams {\n  wrapperClassName?: string;\n  errorClassName?: string;\n  showErrorInWrapper?: boolean;\n}\n\nexport interface TWithGamePlayingWrapperProps extends JSX.IntrinsicAttributes {\n  error?: Error;\n  isLoading?: boolean;\n  gameSessionIsFinished?: boolean;\n  gameSessionIsPlaying?: boolean;\n}\n\nexport function withGamePlayingWrapperFabric<P extends JSX.IntrinsicAttributes>(\n  params: TWithGamePlayingWrapperParams,\n): (Component: React.ComponentType<P & TWithGamePlayingWrapperProps>) => (props: P) => JSX.Element {\n  const { wrapperClassName, errorClassName, showErrorInWrapper = true } = params;\n  return function withGamePlayingWrapper<P extends JSX.IntrinsicAttributes>(\n    Component: React.ComponentType<P>,\n  ) {\n    return function GamePlayingWrapper(props: P) {\n      // GameParams...\n      const gameParamsIsLoading = useGameParamsIsLoading();\n      const gameParamsError = useGameParamsError();\n      // GameSession\n      const gameSessionIsLoading = useGameSessionIsLoading();\n      const gameSessionError = useGameSessionError();\n      // Questions\n      const questionsIsLoading = useQuestionsIsLoading();\n      const questionsError = useQuestionsError();\n      // Composed...\n      const isLoading = gameParamsIsLoading || gameSessionIsLoading || questionsIsLoading;\n      const error = gameSessionError || gameParamsError || questionsError;\n      const gameSessionIsFinished = useGameSessionIsFinished();\n      const gameSessionIsPlaying = useGameSessionIsPlaying();\n      // const gameSessionIsFailed = useGameSessionIsFailed();\n      const displayContent = !gameParamsIsLoading; // && !isLoading && !error;\n      /* console.log('[withGamePlayingWrapper:GamePlayingWrapper]', {\n       *   gameParamsIsLoading,\n       *   gameParamsError,\n       *   isLoading,\n       *   error,\n       *   displayContent,\n       * });\n       */\n      const router = useRouter();\n      const goToStartPage = React.useCallback(() => {\n        router.push('/');\n      }, [router]);\n      const showSmallLoader = isLoading && gameSessionIsPlaying;\n      const showLargeLoader = isLoading && !gameSessionIsPlaying;\n      return (\n        <div className={classnames(wrapperClassName, styles.container)}>\n          {/* Show error */}\n          {showErrorInWrapper && error && (\n            <Box className={classnames(styles.contentErrorContainer)} m={2}>\n              <Typography className={classnames(errorClassName, styles.contentError)} m={2}>\n                {errorToString(error)}\n              </Typography>\n              <Stack\n                className={styles.actions}\n                spacing={2}\n                direction=\"row\"\n                m={2}\n                justifyContent=\"center\"\n              >\n                <Button className=\"FixMuiButton\" onClick={goToStartPage} variant=\"contained\">\n                  <span className=\"Text\">Начать сначала</span>\n                </Button>\n              </Stack>\n            </Box>\n          )}\n          {displayContent && (\n            <Box className={styles.contentContainer}>\n              <Component\n                {...props}\n                error={error}\n                isLoading={isLoading}\n                gameSessionIsFinished={gameSessionIsFinished}\n                gameSessionIsPlaying={gameSessionIsPlaying}\n                // gameSessionIsFailed={gameSessionIsFailed}\n              />\n            </Box>\n          )}\n          {/* Show small loader at the end of article items if some data has loaded */}\n          <LoaderSplash\n            className={styles.smallLoader}\n            spinnerSize=\"medium\"\n            // show // Without animations!\n            show={showSmallLoader}\n          />\n          {/* Show large covering loader splash if no data loaded */}\n          <LoaderSplash\n            className={styles.loaderSplash}\n            show={showLargeLoader}\n            spinnerSize=\"large\"\n            bg=\"white\"\n            mode=\"cover\"\n            fullSize\n          />\n        </div>\n      );\n    };\n  };\n}\n","/** @module WrappedGameBlock\n *  @since 2023.02.14, 14:52\n *  @changed 2023.02.15, 16:04\n */\n\nimport React from 'react';\nimport { compose } from 'redux';\n\nimport { withGamePlayingWrapperFabric } from '@/ui-blocks/withGamePlayingWrapper';\n\nimport { GameBlock, TGameBlockProps } from './GameBlock';\n\nimport styles from './WrappedGameBlock.module.scss';\n\n// Export wrapped version\nexport const WrappedGameBlock = compose<React.FC<TGameBlockProps>>(\n  withGamePlayingWrapperFabric<TGameBlockProps>({\n    errorClassName: styles.error,\n    wrapperClassName: styles.wrapper,\n  }),\n)(GameBlock);\n","export * from './GameBlock';\nexport * from './WrappedGameBlock';\n","/** @module GamePage\n *  @since 2023.02.14, 14:50\n *  @changed 2023.02.14, 14:50\n */\n\nimport GenericPageLayout from '@/layout/GenericPageLayout';\nimport { PageSectionWrapper } from '@/ui-elements';\nimport { subPageTitle } from '@/ui-support/pageUtils';\nimport { WrappedGameBlock } from '@/ui-blocks/GameBlock';\n\nexport default function IndexPage(): JSX.Element {\n  const pageTitle = 'Игра';\n  const title = subPageTitle(pageTitle);\n  return (\n    <GenericPageLayout title={title}>\n      <PageSectionWrapper flex flexVertical fullSizeFlexChild flexCenter>\n        <WrappedGameBlock />\n      </PageSectionWrapper>\n    </GenericPageLayout>\n  );\n}\n","/** @module GamePage\n *  @since 2023.02.14, 14:50\n *  @changed 2023.02.14, 14:50\n */\n\nimport GamePage from '@/ui-pages/GamePage';\n\nexport default GamePage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameLayout_container__a9RxR\",\"box\":\"GameLayout_box__2JorJ\",\"partnersBox\":\"GameLayout_partnersBox__sKL6r\",\"gameBox\":\"GameLayout_gameBox__YQH2L\",\"DEBUG\":\"GameLayout_DEBUG__44p6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GamePlaying_container__8SLk7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GamePlayingContent_container__aSnwj\",\"Empty\":\"GamePlayingContent_Empty__U0pPk\",\"WaitingMulti\":\"GamePlayingContent_WaitingMulti__UKIn8\",\"WaitingSingle\":\"GamePlayingContent_WaitingSingle__ofYKC\",\"WaitingFailed\":\"GamePlayingContent_WaitingFailed__eTXf9\",\"WasCancelled\":\"GamePlayingContent_WasCancelled__MfhlT\",\"GameReady\":\"GamePlayingContent_GameReady__lOmat\",\"WaitingStart\":\"GamePlayingContent_WaitingStart__YaWyM\",\"DEBUG\":\"GamePlayingContent_DEBUG__wFybG\",\"error\":\"GamePlayingContent_error__nWi_M\",\"actions\":\"GamePlayingContent_actions__fvFCS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"WrappedGamePlaying_error__X2EPd\",\"wrapper\":\"WrappedGamePlaying_wrapper__YSwgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Partner_container__rAS5t\",\"self\":\"Partner_self__592Ry\",\"other\":\"Partner_other__3_ouq\",\"question\":\"Partner_question__LRcnT\",\"questionsBox\":\"Partner_questionsBox__AV0_v\",\"DEBUG\":\"Partner_DEBUG__Lv99n\",\"questionCorrect\":\"Partner_questionCorrect__NKwdH\",\"questionWrong\":\"Partner_questionWrong__qKUbS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"QuestionsCard_container__2lWSZ\",\"infoRow\":\"QuestionsCard_infoRow__vSNhD\",\"progressRow\":\"QuestionsCard_progressRow__Y7G4Y\",\"questionRow\":\"QuestionsCard_questionRow__xKYGg\",\"answersRow\":\"QuestionsCard_answersRow__mg5yR\",\"actionsRow\":\"QuestionsCard_actionsRow__Yqp0R\",\"DEBUG\":\"QuestionsCard_DEBUG__E8uoT\",\"progressBar\":\"QuestionsCard_progressBar__aZZ3b\",\"answer\":\"QuestionsCard_answer__33R_Y\",\"answerCorrect\":\"QuestionsCard_answerCorrect__4JKNB\",\"answerWrong\":\"QuestionsCard_answerWrong__9_LCO\",\"answerText\":\"QuestionsCard_answerText__heme_\",\"answerActive\":\"QuestionsCard_answerActive__OKuD6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameBlock_container__6ajde\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameBlockContent_container__x3Jwv\",\"Empty\":\"GameBlockContent_Empty__Kfu40\",\"GameReady\":\"GameBlockContent_GameReady__jV5t8\",\"DEBUG\":\"GameBlockContent_DEBUG__vBGKd\",\"error\":\"GameBlockContent_error__fsdHU\",\"actions\":\"GameBlockContent_actions__ohim0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"WrappedGameBlock_error__6n7kx\",\"wrapper\":\"WrappedGameBlock_wrapper__KbOID\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GamePlayingWrapper_container__c_kTA\",\"contentError\":\"GamePlayingWrapper_contentError__dhYPs\",\"contentContainer\":\"GamePlayingWrapper_contentContainer__xlavK\",\"smallLoader\":\"GamePlayingWrapper_smallLoader__mYf3r\",\"loaderSplash\":\"GamePlayingWrapper_loaderSplash__qFtCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameSessionWrapper_container__aDk9O\",\"contentError\":\"GameSessionWrapper_contentError__ATjRz\",\"contentContainer\":\"GameSessionWrapper_contentContainer__9ZWe_\",\"smallLoader\":\"GameSessionWrapper_smallLoader__MetXT\",\"loaderSplash\":\"GameSessionWrapper_loaderSplash__61cgZ\"};"],"names":["window","__NEXT_P","push","__webpack_require__","params","wrapperClassName","errorClassName","showErrorInWrapper","Empty","param","reason","jsx_runtime","jsx","Box","data-reason","className","classnames","styles","config","jsxs","Typography","useYourData","token","useGameParamsToken","name","useGameParamsUserName","React","usePartnerData","useGameSessionPartnerToken","useGameSessionPartnerName","Partner","props","self","data","questions","useQuestions","questionsContent","length","map","q","idx","key","id","textAlign","gutterBottom","Stack","flexDirection","flexWrap","gap","QuestionsCard","questionsCount","currentQuestion","questionText","question","answers","progress","percents","String","Math","round","console","log","currentQuestionNo","answersContent","a","text","my","flex","sx","width","mt","variant","Button","span","GameLayout","gameMode","useGameParamsGameMode","isMulti","GamePlaying","router","useRouter","userName","hasGameStarted","useGameWaitingIsGameStarted","isPlaying","useGameSessionIsPlaying","partnerToken","gameToken","useGameSessionGameToken","isGameReady","isParamsReady","content","compose","_params_showErrorInWrapper","Component","isGameParamsLoading","useGameParamsIsLoading","gameParamsError","useGameParamsError","isLoading","useGameSessionIsLoading","error","useGameSessionError","isFinished","useGameSessionIsFinished","goToStartPage","div","m","errorToString","spacing","direction","justifyContent","onClick","displayContent","LoaderSplash","spinnerSize","show","bg","mode","fullSize","WrappedGameBlock","gameParamsIsLoading","gameSessionIsLoading","gameSessionError","questionsIsLoading","useQuestionsIsLoading","questionsError","useQuestionsError","gameSessionIsFinished","gameSessionIsPlaying","dispatch","useAppDispatch","loadQuestionsThunk","gameSessionStartThunk","game","title","subPageTitle","GenericPageLayout","PageSectionWrapper","flexVertical","fullSizeFlexChild","flexCenter","module","exports"],"sourceRoot":""}