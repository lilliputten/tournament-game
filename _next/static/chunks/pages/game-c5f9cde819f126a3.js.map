{"version":3,"file":"static/chunks/pages/game-c5f9cde819f126a3.js","mappings":"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","sources":["webpack://_N_E/?cbc4","webpack://_N_E/./src/ui-blocks/GameBlock/GameBlockContent.tsx","webpack://_N_E/./src/components/Game/GamePlaying/GamePlayingContent.tsx","webpack://_N_E/./src/components/Game/Partner/Partner.tsx","webpack://_N_E/./src/components/Game/QuestionsCard/QuestionsCard.tsx","webpack://_N_E/./src/components/Game/index.ts","webpack://_N_E/./src/components/Game/GameLayout/GameLayout.tsx","webpack://_N_E/./src/components/Game/GamePlaying/GamePlaying.tsx","webpack://_N_E/./src/ui-blocks/withGameSessionWrapper/withGameSessionWrapper.tsx","webpack://_N_E/./src/components/Game/GamePlaying/WrappedGamePlaying.tsx","webpack://_N_E/./src/components/Game/GamePlaying/index.ts","webpack://_N_E/./src/ui-blocks/GameBlock/GameBlock.tsx","webpack://_N_E/./src/ui-blocks/withGamePlayingWrapper/withGamePlayingWrapper.tsx","webpack://_N_E/./src/ui-blocks/GameBlock/WrappedGameBlock.tsx","webpack://_N_E/./src/ui-blocks/GameBlock/index.ts","webpack://_N_E/./src/ui-pages/GamePage.tsx","webpack://_N_E/./src/pages/game.tsx","webpack://_N_E/./src/components/Game/GameLayout/GameLayout.module.scss","webpack://_N_E/./src/components/Game/GamePlaying/GamePlaying.module.scss","webpack://_N_E/./src/components/Game/GamePlaying/GamePlayingContent.module.scss","webpack://_N_E/./src/components/Game/GamePlaying/WrappedGamePlaying.module.scss","webpack://_N_E/./src/components/Game/Partner/Partner.module.scss","webpack://_N_E/./src/components/Game/QuestionsCard/QuestionsCard.module.scss","webpack://_N_E/./src/ui-blocks/GameBlock/GameBlock.module.scss","webpack://_N_E/./src/ui-blocks/GameBlock/GameBlockContent.module.scss","webpack://_N_E/./src/ui-blocks/GameBlock/WrappedGameBlock.module.scss","webpack://_N_E/./src/ui-blocks/withGamePlayingWrapper/GamePlayingWrapper.module.scss","webpack://_N_E/./src/ui-blocks/withGameSessionWrapper/GameSessionWrapper.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/game\",\n      function () {\n        return require(\"private-next-pages/game.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/game\"])\n      });\n    }\n  ","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n// import Button from '@mui/material/Button';\n// import { Stack } from '@mui/system';\nimport classnames from 'classnames';\n\nimport config from '@/config';\nimport { TGameSessionState } from '@/features/GameSession';\n\nimport styles from './GameBlockContent.module.scss';\nimport { TGameParamsState } from '@/features/GameParams';\n\nexport interface TGameBlockProps extends JSX.IntrinsicAttributes {\n  className?: string;\n}\n\nexport type TCb = () => void;\n\nexport function Empty({ reason }: { reason?: string }) {\n  return (\n    <Box data-reason={reason || null} className={classnames(styles.container, styles.Empty)}>\n      {config.build.isDev && reason && <Typography>GameBlock Empty: {reason}</Typography>}\n    </Box>\n  );\n}\n\nexport function GameInfo({\n  partnerName,\n  gameMode,\n}: Pick<TGameSessionState, 'partnerName'> & Pick<TGameParamsState, 'gameMode'>) {\n  return (\n    <Box className={classnames(styles.container, styles.GameReady)}>\n      <Typography variant=\"h5\">Информция об игре (GameBlock)</Typography>\n      {gameMode && <Typography>Режим игры: {gameMode}</Typography>}\n      {partnerName && <Typography>Ваш партнёр: {partnerName}</Typography>}\n      {/*\n      <Typography>\n        Игра запускается...\n      </Typography>\n      */}\n    </Box>\n  );\n}\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport classnames from 'classnames';\n\nimport config from '@/config';\nimport { TGameSessionState } from '@/features/GameSession';\nimport { TGameParamsState } from '@/features/GameParams';\nimport { TQuestions } from '@/core/types';\n\nimport styles from './GamePlayingContent.module.scss';\n\nexport interface TGamePlayingProps extends JSX.IntrinsicAttributes {\n  className?: string;\n}\n\nexport type TCb = () => void;\n\nexport function Empty({ reason }: { reason?: string }) {\n  return (\n    <Box data-reason={reason || null} className={classnames(styles.container, styles.Empty)}>\n      {config.build.isDev && reason && <Typography>GamePlaying Empty: {reason}</Typography>}\n    </Box>\n  );\n}\n\n// DBEUG\nexport function GameInfo({\n  partnerName,\n  partnerToken,\n  questions,\n  gameMode,\n}: Pick<TGameSessionState, 'partnerName' | 'partnerToken'> &\n  Pick<TGameParamsState, 'gameMode'> & { questions?: TQuestions }) {\n  return (\n    <Box className={classnames(styles.container, styles.GameReady)}>\n      <Typography variant=\"h5\">Информция об игре (GamePlaying)</Typography>\n      {gameMode && <Typography>Режим игры: {gameMode}</Typography>}\n      {partnerName && (\n        <Typography>\n          Ваш партнёр: {partnerName} ({partnerToken})\n        </Typography>\n      )}\n      {questions && (\n        <Typography>Вопросы: {questions.map(({ question }) => question).join(' | ')}</Typography>\n      )}\n    </Box>\n  );\n}\n","/** @module Partner\n *  @since 2023.02.15, 19:54\n *  @changed 2023.02.17, 20:38\n */\n\nimport React from 'react';\nimport { Box, Stack, Typography } from '@mui/material';\nimport classnames from 'classnames';\n\nimport { TQuestionAnswers, TQuestions, TToken, useQuestions } from '@/core';\n\nimport styles from './Partner.module.scss';\n\nexport interface TPartnerProps extends JSX.IntrinsicAttributes {\n  className?: string;\n  self?: boolean;\n  token: TToken;\n  // info: TPartnerInfo;\n  name: string;\n  questionAnswers?: TQuestionAnswers;\n}\n\nexport function Partner(props: TPartnerProps): JSX.Element | null {\n  const { className, self, name, questionAnswers } = props;\n\n  /* // Data receiver hook: for self record or remote partner\n   * const useData = React.useMemo(() => (self ? useYourData : usePartnerData), [self]);\n   * const data = useData();\n   * const { name } = data;\n   */\n\n  const selfId = self ? 'self' : 'other';\n  const questions: TQuestions | undefined = useQuestions();\n\n  const questionsContent = React.useMemo(() => {\n    if (!questions || !questions.length) {\n      return null;\n    }\n    return questions.map((q, idx) => {\n      const { id } = q;\n      const key = id || 'Q-' + idx;\n      const answer = questionAnswers && questionAnswers[id];\n      const isCorrect = answer && answer === 'correct';\n      const isWrong = answer && answer === 'wrong';\n      // Correct & wrong styles\n      const className = classnames(\n        styles.question,\n        (isCorrect || isWrong) && !self && styles.questionFinished,\n        isCorrect && self && styles.questionCorrect,\n        isWrong && self && styles.questionWrong,\n      );\n      return <Box key={key} id={key} className={className} />;\n    });\n  }, [questions, questionAnswers, self]);\n\n  return (\n    <Box className={classnames(className, styles.container, styles[selfId])}>\n      <Box className={classnames(styles.partner)}>\n        <Typography className={classnames(styles.name)} textAlign=\"left\" gutterBottom>\n          {name}\n        </Typography>\n        {questionsContent && (\n          <Stack\n            className={classnames(styles.questionsBox)}\n            flexDirection=\"row\"\n            flexWrap=\"wrap\"\n            gap=\"6px\"\n          >\n            {questionsContent}\n          </Stack>\n        )}\n      </Box>\n    </Box>\n  );\n}\n","/** @module QuestionsCard\n *  @since 2023.02.15, 19:54\n *  @changed 2023.02.17, 05:02\n */\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { Box, Button, Stack, Typography } from '@mui/material';\nimport classnames from 'classnames';\n\nimport {\n  cancelAllActiveRequests,\n  // TAnswer,\n  useAppDispatch,\n  useGameSessionCurrentAnswerIdx,\n  useGameSessionCurrentAnswerIsCorrect,\n  useGameSessionCurrentQuestionIdx,\n  useGameSessionIsFinished,\n  useGameSessionIsLoading,\n  useQuestions,\n} from '@/core';\nimport {\n  gameSessionFinishedThunk,\n  gameSessionSendAnswerThunk,\n  gameSessionStopThunk,\n  saveGameSessionQuestionIdxThunk,\n  TGameSessionQuestionIdxPayloadAction,\n} from '@/features/GameSession/services';\nimport { actions as gameSessionActions } from '@/features/GameSession/reducer';\n\nimport styles from './QuestionsCard.module.scss';\n\nexport interface TQuestionsCardProps extends JSX.IntrinsicAttributes {\n  className?: string;\n}\n\nexport function QuestionsCard(props: TQuestionsCardProps) {\n  const { className } = props;\n\n  const dispatch = useAppDispatch();\n  const router = useRouter();\n\n  const isLoading = useGameSessionIsLoading();\n  const isFinished = useGameSessionIsFinished();\n\n  // Is game finished?\n  React.useEffect(() => {\n    if (isFinished) {\n      router.push('/results');\n    }\n  }, [isFinished, router]);\n\n  const currentAnswerIsCorrect = useGameSessionCurrentAnswerIsCorrect();\n  const currentAnswerIdx = useGameSessionCurrentAnswerIdx();\n  const hasAnswered = currentAnswerIdx != undefined;\n\n  const hasChecked = currentAnswerIsCorrect !== undefined;\n\n  // Get data...\n  const questions = useQuestions();\n  const questionsCount = questions?.length || 0;\n  const currentQuestionIdx = useGameSessionCurrentQuestionIdx(); // NOTE: Can be undefined!\n  const isReady = currentQuestionIdx != undefined;\n  const questionIdx = currentQuestionIdx || 0;\n  const questionNo = questionIdx + 1;\n  const isLastQuestion = questionNo === questionsCount;\n  const currentQuestion = questions && questions[questionIdx];\n  const questionId = currentQuestion?.id;\n  const questionText = currentQuestion?.question;\n  const answers = currentQuestion?.answers;\n  const currentAnswer =\n    (hasAnswered && Array.isArray(answers) && answers[currentAnswerIdx]) || undefined;\n  const answerId = currentAnswer?.id;\n  const progress = questionsCount && questionNo / questionsCount;\n  const percents = String(Math.round(progress * 100)) + '%';\n\n  const handleAnswer = React.useCallback(\n    (ev: React.MouseEvent<HTMLDivElement>) => {\n      const { currentTarget } = ev;\n      const answerIdx = Number(currentTarget.dataset['answer']);\n      dispatch(gameSessionActions.setCurrentAnswerIdx(answerIdx));\n    },\n    [dispatch],\n  );\n\n  // Create answers list...\n  const answersContent = React.useMemo(() => {\n    if (!answers || !answers.length) {\n      return null;\n    }\n    return answers.map((a, idx) => {\n      const { text } = a;\n      const key = 'A-' + idx;\n      // TODO: Correct & wrong styles\n      // TODO: onClick for active answers\n      const isActive = !isLoading && !hasChecked;\n      const isCurrent = idx === currentAnswerIdx;\n      const isChecked = isActive && hasAnswered && isCurrent;\n      const isCurrentChecked = hasChecked && isCurrent;\n      const isCurrentCheckedCorrect = isCurrentChecked && !!currentAnswerIsCorrect;\n      const isCurrentCheckedWrong = isCurrentChecked && !currentAnswerIsCorrect;\n      const className = classnames(\n        styles.answer,\n        isActive && styles.answerActive,\n        isChecked && styles.answerChecked,\n        isCurrentCheckedCorrect && styles.answerCorrect,\n        isCurrentCheckedWrong && styles.answerWrong,\n        isLoading && isCurrent && styles.answerLoading,\n      );\n      return (\n        <Box\n          key={key}\n          id={key}\n          data-answer={String(idx)}\n          className={className}\n          onClick={isActive ? handleAnswer : undefined}\n        >\n          <Typography className={classnames(styles.answerText)} textAlign=\"left\">\n            {text}\n          </Typography>\n        </Box>\n      );\n    });\n  }, [\n    answers,\n    isLoading,\n    hasChecked,\n    currentAnswerIdx,\n    hasAnswered,\n    currentAnswerIsCorrect,\n    handleAnswer,\n  ]);\n\n  const handleCancel = React.useCallback(() => {\n    // Send cancel request (to stop game), go to main page\n    dispatch(gameSessionStopThunk());\n    cancelAllActiveRequests();\n    router.push('/');\n  }, [router, dispatch]);\n\n  const checkAnswers = React.useCallback(() => {\n    if (!questionId || !answerId) {\n      const error = new Error('Answer params is undefined');\n      // eslint-disable-next-line no-console\n      console.error('[QuestionsCard]: checkAnswers: error', {\n        error,\n        questionId,\n        answerId,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    // Send cancel request (to stop game), go to main page\n    const params = {\n      questionId,\n      answerId,\n    };\n    dispatch(gameSessionSendAnswerThunk(params));\n  }, [questionId, answerId, dispatch]);\n\n  const goToNextQuestion = React.useCallback(() => {\n    // Send cancel request (to stop game), go to main page\n    const nextQuestionIdx = questionIdx + 1;\n    dispatch(saveGameSessionQuestionIdxThunk({ questionIdx: nextQuestionIdx })).then(\n      (action: TGameSessionQuestionIdxPayloadAction) => {\n        const { questionIdx } = action.payload;\n        return dispatch(gameSessionActions.setCurrentQuestionIdx(questionIdx));\n      },\n    );\n    // TODO: May be promised further...\n  }, [dispatch, questionIdx]);\n\n  const goToResults = React.useCallback(() => {\n    // Send cancel request (to stop game), go to main page\n    dispatch(gameSessionActions.resetQuestionAndAnswer());\n    dispatch(gameSessionFinishedThunk());\n    dispatch(gameSessionActions.setCurrentQuestionIdx(0));\n    // Go to results page\n    router.push('/results');\n  }, [dispatch, router]);\n\n  if (!isReady) {\n    return null;\n  }\n\n  return (\n    <Stack className={classnames(className, styles.container)}>\n      <Stack className={classnames(styles.infoRow)} flexDirection=\"row\" my={1}>\n        <Typography textAlign=\"left\">Вопрос {questionNo}</Typography>\n        <Typography textAlign=\"right\" flex={1}>\n          из {questionsCount}\n        </Typography>\n      </Stack>\n      <Box className={classnames(styles.progressRow)}>\n        <Box className={classnames(styles.progressBar)} sx={{ width: percents }} />\n      </Box>\n      <Box className={classnames(styles.questionRow)} my={1} mt={2}>\n        <Typography variant=\"h5\">{questionText}</Typography>\n      </Box>\n      <Box className={classnames(styles.answersRow, isLoading && styles.answersLoading)} my={1}>\n        {answersContent}\n      </Box>\n      <Stack\n        className={classnames(styles.actionsRow)}\n        my={2}\n        flexDirection=\"row\"\n        gap={1}\n        flexWrap=\"wrap\"\n      >\n        <Button\n          className=\"FixMuiButton\"\n          variant=\"contained\"\n          disabled={!hasAnswered || isLoading}\n          onClick={!hasChecked ? checkAnswers : !isLastQuestion ? goToNextQuestion : goToResults}\n        >\n          <span className=\"Text\">\n            {!hasChecked ? 'Проверить' : !isLastQuestion ? 'Следующий вопрос' : 'Завершить'}\n          </span>\n        </Button>\n        <Button className=\"FixMuiButton\" variant=\"outlined\" onClick={handleCancel}>\n          <span className=\"Text\">Отказаться от игры</span>\n        </Button>\n      </Stack>\n    </Stack>\n  );\n}\n","export * from './GameLayout';\nexport * from './GamePlaying';\nexport * from './Partner';\nexport * from './QuestionsCard';\n","/** @module GameLayout\n *  @since 2023.02.15, 19:54\n *  @changed 2023.02.17, 20:38\n */\n\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport classnames from 'classnames';\nimport { Stack } from '@mui/material';\n\nimport { useGameParamsToken, useGameSessionPartnersInfo } from '@/core';\nimport { Partner, QuestionsCard } from '@/components/Game';\n\nimport styles from './GameLayout.module.scss';\n\nexport interface TGameLayoutProps extends JSX.IntrinsicAttributes {\n  className?: string;\n}\n\nexport function GameLayout(props: TGameLayoutProps): JSX.Element | null {\n  const { className } = props;\n  /* // @see:\n   * - [Школа/ сервисы – Figma](https://www.figma.com/file/C1ylOhuxpqwMitM11JHE8Y/%D0%A8%D0%BA%D0%BE%D0%BB%D0%B0%2F-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B?node-id=2323%3A1061&t=vjG6YjAtpOyUFoIc-0)\n   * - [React Typography component - Material UI](https://mui.com/material-ui/react-typography/)\n   */\n  // const gameMode = useGameParamsGameMode();\n  // const isMulti = gameMode === 'multi';\n  const currentToken = useGameParamsToken();\n  const partnersInfo = useGameSessionPartnersInfo();\n  const partnersContent = React.useMemo(() => {\n    const tokens = partnersInfo && Object.keys(partnersInfo);\n    if (!tokens || !tokens.length) {\n      return null;\n    }\n    const orderedTokens =\n      currentToken && tokens.length > 1\n        ? // Put current partner to the end of the list\n          tokens.filter((token) => token !== currentToken).concat(currentToken)\n        : tokens;\n    return orderedTokens.map((token) => {\n      const info = partnersInfo[token];\n      const { name, questionAnswers } = info;\n      const isSelf = token === currentToken;\n      return (\n        <Partner\n          key={token}\n          self={isSelf}\n          token={token}\n          questionAnswers={questionAnswers}\n          name={name}\n          // info={info}\n        />\n      );\n    });\n  }, [partnersInfo, currentToken]);\n  return (\n    <Box className={classnames(className, styles.container)}>\n      <Stack className={classnames(styles.partnersBox)} gap={2}>\n        <Typography className={classnames(styles.partnersTitle)} variant=\"h6\" textAlign=\"left\">\n          Участники\n        </Typography>\n        {partnersContent}\n      </Stack>\n      <Box className={classnames(styles.gameBox)}>\n        <QuestionsCard className={classnames(styles.gameBox)} />\n      </Box>\n    </Box>\n  );\n}\n","/** @module GamePlaying\n *  @since 2023.02.14, 14:52\n *  @changed 2023.02.15, 21:30\n */\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Box from '@mui/material/Box';\nimport classnames from 'classnames';\n\nimport {\n  // useAppDispatch,\n  useGameParamsGameMode,\n  useGameParamsToken,\n  useGameParamsUserName,\n  useGameSessionPartnerToken,\n  useGameSessionGameToken,\n  useGameWaitingIsGameStarted,\n  useGameSessionIsPlaying,\n  useQuestions,\n} from '@/core';\nimport { Empty } from './GamePlayingContent';\n\nimport styles from './GamePlaying.module.scss';\nimport { GameLayout } from '../GameLayout/GameLayout';\n\nexport interface TGamePlayingProps extends JSX.IntrinsicAttributes {\n  className?: string;\n}\n\nexport function GamePlaying(props: TGamePlayingProps): JSX.Element | null {\n  const { className } = props;\n  /* // @see:\n   * - [Школа/ сервисы – Figma](https://www.figma.com/file/C1ylOhuxpqwMitM11JHE8Y/%D0%A8%D0%BA%D0%BE%D0%BB%D0%B0%2F-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B?node-id=2323%3A1061&t=vjG6YjAtpOyUFoIc-0)\n   * - [React Typography component - Material UI](https://mui.com/material-ui/react-typography/)\n   */\n\n  // const appRootStore = useStore<TRootState>();\n  // const dispatch = useAppDispatch();\n  const router = useRouter();\n\n  const token = useGameParamsToken();\n  const userName = useGameParamsUserName();\n  const gameMode = useGameParamsGameMode();\n\n  // Has game started in GameWaiting?\n  const hasGameStarted = useGameWaitingIsGameStarted();\n\n  // const isStarted = useGameWaitingIsGameStarted();\n\n  const isPlaying = useGameSessionIsPlaying();\n\n  // const partnerName = useGameSessionPartnerName();\n  const partnerToken = useGameSessionPartnerToken();\n  const gameToken = useGameSessionGameToken();\n\n  const questions = useQuestions();\n  const hasQuestions = !!questions;\n\n  const isParamsReady = !!(token && userName && hasGameStarted);\n  const isGameReady = !!(\n    isParamsReady &&\n    gameToken &&\n    hasQuestions &&\n    (gameMode !== 'multi' || partnerToken)\n  );\n\n  // Effect: Game not ready?\n  React.useEffect(() => {\n    // Go to the start page if environment isn't ready yet\n    if (!isGameReady) {\n      router.push('/waiting');\n    }\n  }, [router, isGameReady]);\n\n  const content = React.useMemo(() => {\n    if (!isGameReady) {\n      // Don't render nothing and go to the start page if environment isn't ready yet...\n      return <Empty reason=\"Not ready\" />;\n    } else if (isPlaying) {\n      return <GameLayout />;\n    } else {\n      return <Empty reason=\"Unknown\" />;\n    }\n  }, [isGameReady, isPlaying]);\n\n  return <Box className={classnames(className, styles.container)}>{content}</Box>;\n}\n","/** @module withGameSessionWrapper\n *  @desc Wrapping any component (with GameSessionWrapper)\n *  @since 2023.02.14, 17:35\n *  @changed 2023.02.17, 00:43\n */\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport classnames from 'classnames';\n\nimport {\n  useGameParamsIsLoading,\n  useGameParamsError,\n  useGameSessionIsLoading,\n  useGameSessionError,\n  useGameSessionIsPlaying,\n  useGameSessionIsFinished,\n  // useGameSessionIsFailed,\n} from '@/core/app/app-reducer';\nimport { errorToString } from '@/utils';\nimport { LoaderSplash, toast } from '@/ui-elements';\nimport { Box, Button, Stack, Typography } from '@mui/material';\n\nimport styles from './GameSessionWrapper.module.scss';\n\nexport interface TWithGameSessionWrapperParams {\n  wrapperClassName?: string;\n  errorClassName?: string;\n  showErrorInWrapper?: boolean;\n}\n\nexport interface TWithGameSessionWrapperProps extends JSX.IntrinsicAttributes {\n  error?: Error;\n  isLoading?: boolean;\n  isFinished?: boolean;\n  isPlaying?: boolean;\n  // isFailed?: boolean;\n}\n\nexport function withGameSessionWrapperFabric<P extends JSX.IntrinsicAttributes>(\n  params: TWithGameSessionWrapperParams,\n): (Component: React.ComponentType<P & TWithGameSessionWrapperProps>) => (props: P) => JSX.Element {\n  const { wrapperClassName, errorClassName, showErrorInWrapper = true } = params;\n  return function withGameSessionWrapper<P extends JSX.IntrinsicAttributes>(\n    Component: React.ComponentType<P>,\n  ) {\n    return function GameSessionWrapper(props: P) {\n      const isGameParamsLoading = useGameParamsIsLoading();\n      const gameParamsError = useGameParamsError();\n      const isLoading = useGameSessionIsLoading();\n      const gameSessionError = useGameSessionError();\n      const error = gameSessionError || gameParamsError;\n      // Effect: Show error toast\n      React.useEffect(() => {\n        error && toast.error(errorToString(error));\n      }, [error]);\n      const isFinished = useGameSessionIsFinished();\n      const isPlaying = useGameSessionIsPlaying();\n      const displayContent = !isGameParamsLoading;\n      const router = useRouter();\n      const goToStartPage = React.useCallback(() => {\n        router.push('/');\n      }, [router]);\n      const showSmallLoader = isLoading && isPlaying;\n      const showLargeLoader = isLoading && !isPlaying;\n      return (\n        <div className={classnames(wrapperClassName, styles.container)}>\n          {/* Show error */}\n          {showErrorInWrapper && error && (\n            <Box className={classnames(styles.contentErrorContainer)} m={2}>\n              <Typography className={classnames(errorClassName, styles.contentError)} m={2}>\n                {errorToString(error)}\n              </Typography>\n              <Stack\n                className={styles.actions}\n                spacing={2}\n                direction=\"row\"\n                m={2}\n                justifyContent=\"center\"\n              >\n                <Button className=\"FixMuiButton\" onClick={goToStartPage} variant=\"contained\">\n                  <span className=\"Text\">Начать сначала</span>\n                </Button>\n              </Stack>\n            </Box>\n          )}\n          {displayContent && (\n            <div className={styles.contentContainer}>\n              <Component\n                {...props}\n                error={error}\n                isLoading={isLoading}\n                isFinished={isFinished}\n                isPlaying={isPlaying}\n                // isFailed={isFailed}\n              />\n            </div>\n          )}\n          {/* Show small loader at the end of article items if some data has loaded */}\n          <LoaderSplash\n            className={styles.smallLoader}\n            spinnerSize=\"medium\"\n            // show // Without animations!\n            show={showSmallLoader}\n          />\n          {/* Show large covering loader splash if no data loaded */}\n          <LoaderSplash\n            className={styles.loaderSplash}\n            show={showLargeLoader}\n            spinnerSize=\"large\"\n            bg=\"white\"\n            mode=\"cover\"\n            fullSize\n          />\n        </div>\n      );\n    };\n  };\n}\n","/** @module WrappedGamePlaying\n *  @since 2023.02.14, 14:52\n *  @changed 2023.02.14, 17:34\n */\n\nimport React from 'react';\nimport { compose } from 'redux';\n\nimport { withGameSessionWrapperFabric } from '@/ui-blocks/withGameSessionWrapper';\n\nimport { GamePlaying, TGamePlayingProps } from './GamePlaying';\n\nimport styles from './WrappedGamePlaying.module.scss';\n\n// Export wrapped version\nexport const WrappedGamePlaying = compose<React.FC<TGamePlayingProps>>(\n  withGameSessionWrapperFabric<TGamePlayingProps>({\n    errorClassName: styles.error,\n    wrapperClassName: styles.wrapper,\n  }),\n)(GamePlaying);\n","export * from './GamePlaying';\nexport * from './WrappedGamePlaying';\n","/** @module GameBlock\n *  @desc This component can manage different game screens (main game screen is GamePlaying).\n *  @since 2023.02.14, 14:52\n *  @changed 2023.02.15, 16:56\n */\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Box from '@mui/material/Box';\nimport classnames from 'classnames';\n\nimport { loadQuestionsThunk } from '@/features/Questions/services';\nimport {\n  useAppDispatch,\n  useGameParamsGameMode,\n  useGameParamsToken,\n  useGameParamsUserName,\n  // useGameSessionPartnerName,\n  useGameSessionPartnerToken,\n  useGameSessionGameToken,\n  useGameWaitingIsGameStarted,\n  useGameSessionIsPlaying,\n  useQuestions,\n  useGameSessionIsFinished,\n} from '@/core';\nimport { gameSessionStartThunk } from '@/features/GameSession/services';\nimport {\n  Empty,\n  // GameInfo,\n} from './GameBlockContent';\n\nimport styles from './GameBlock.module.scss';\nimport { GamePlaying } from '@/components/Game/GamePlaying';\n\nexport interface TGameBlockProps extends JSX.IntrinsicAttributes {\n  className?: string;\n}\n\nexport function GameBlock(props: TGameBlockProps): JSX.Element | null {\n  const { className } = props;\n  /* // @see:\n   * - [Школа/ сервисы – Figma](https://www.figma.com/file/C1ylOhuxpqwMitM11JHE8Y/%D0%A8%D0%BA%D0%BE%D0%BB%D0%B0%2F-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B?node-id=2323%3A1061&t=vjG6YjAtpOyUFoIc-0)\n   * - [React Typography component - Material UI](https://mui.com/material-ui/react-typography/)\n   */\n\n  // const appRootStore = useStore<TRootState>();\n  const dispatch = useAppDispatch();\n  const router = useRouter();\n\n  const token = useGameParamsToken();\n  const userName = useGameParamsUserName();\n  const gameMode = useGameParamsGameMode();\n\n  // Has game started in GameWaiting?\n  const hasGameStarted = useGameWaitingIsGameStarted();\n\n  const isPlaying = useGameSessionIsPlaying();\n  const isFinished = useGameSessionIsFinished();\n\n  // const partnerName = useGameSessionPartnerName();\n  const partnerToken = useGameSessionPartnerToken();\n  const gameToken = useGameSessionGameToken();\n\n  const questions = useQuestions();\n  const hasQuestions = !!questions;\n\n  const isParamsReady = !!(token && userName && hasGameStarted);\n  const isGameReady = !!(\n    isParamsReady &&\n    gameToken &&\n    hasQuestions &&\n    (gameMode !== 'multi' || partnerToken)\n  );\n\n  // Effect: Questions...\n  React.useEffect(() => {\n    if (isParamsReady) {\n      dispatch(loadQuestionsThunk());\n    }\n  }, [isParamsReady, dispatch]);\n\n  // Effect: Start game...\n  React.useEffect(() => {\n    if (isParamsReady && !isGameReady && !isFinished && !isPlaying) {\n      console.log('[GameBlock]: start game?');\n      // TODO: Do not request start game on finish game!\n      dispatch(gameSessionStartThunk());\n      // TODO: To use handler on game end?\n    }\n  }, [isParamsReady, isGameReady, isFinished, isPlaying, dispatch]);\n\n  // Effect: Params not ready?\n  React.useEffect(() => {\n    // Go to the start page if environment isn't ready yet\n    if (!isParamsReady) {\n      router.push('/waiting');\n    }\n  }, [router, isParamsReady]);\n\n  const content = React.useMemo(() => {\n    if (!isGameReady) {\n      // Don't render nothing and go to the start page if environment isn't ready yet...\n      return <Empty reason=\"Not ready\" />;\n    } else if (isPlaying) {\n      return <GamePlaying />;\n      // return <GameInfo partnerName={partnerName} gameMode={gameMode} />;\n    } else {\n      return <Empty reason=\"Unknown\" />;\n    }\n  }, [\n    // partnerName,\n    // gameMode,\n    isGameReady,\n    isPlaying,\n  ]);\n\n  return (\n    <Box className={classnames(className, styles.container)} my={2} flexDirection=\"row\">\n      {content}\n    </Box>\n  );\n}\n","/** @module withGamePlayingWrapper\n *  @desc Wrapping any component (with GamePlayingWrapper)\n *  @since 2023.02.15, 15:55\n *  @changed 2023.02.17, 00:43\n */\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport classnames from 'classnames';\n\nimport {\n  useGameParamsIsLoading,\n  useGameParamsError,\n  useGameSessionIsLoading,\n  useGameSessionError,\n  useGameSessionIsPlaying,\n  useGameSessionIsFinished,\n  useQuestionsIsLoading,\n  useQuestionsError,\n  useGameSessionIsSessionChecking,\n} from '@/core/app/app-reducer';\nimport { errorToString } from '@/utils';\nimport { LoaderSplash, toast } from '@/ui-elements';\nimport { Box, Button, Stack, Typography } from '@mui/material';\n\nimport styles from './GamePlayingWrapper.module.scss';\n\nexport interface TWithGamePlayingWrapperParams {\n  wrapperClassName?: string;\n  errorClassName?: string;\n  showErrorInWrapper?: boolean;\n}\n\nexport interface TWithGamePlayingWrapperProps extends JSX.IntrinsicAttributes {\n  error?: Error;\n  isLoading?: boolean;\n  gameSessionIsFinished?: boolean;\n  gameSessionIsPlaying?: boolean;\n}\n\nexport function withGamePlayingWrapperFabric<P extends JSX.IntrinsicAttributes>(\n  params: TWithGamePlayingWrapperParams,\n): (Component: React.ComponentType<P & TWithGamePlayingWrapperProps>) => (props: P) => JSX.Element {\n  const { wrapperClassName, errorClassName, showErrorInWrapper = true } = params;\n  return function withGamePlayingWrapper<P extends JSX.IntrinsicAttributes>(\n    Component: React.ComponentType<P>,\n  ) {\n    return function GamePlayingWrapper(props: P) {\n      // GameParams...\n      const gameSessionIsChecking = useGameSessionIsSessionChecking();\n      const gameParamsIsLoading = useGameParamsIsLoading();\n      const gameParamsError = useGameParamsError();\n      // GameSession\n      const gameSessionIsLoading = useGameSessionIsLoading();\n      const gameSessionError = useGameSessionError();\n      // Questions\n      const questionsIsLoading = useQuestionsIsLoading();\n      const questionsError = useQuestionsError();\n      // Composed...\n      const isLoading =\n        gameSessionIsChecking || gameParamsIsLoading || gameSessionIsLoading || questionsIsLoading;\n      const error = gameSessionError || gameParamsError || questionsError;\n      // Effect: Show error toast\n      React.useEffect(() => {\n        error && toast.error(errorToString(error));\n      }, [error]);\n      const gameSessionIsFinished = useGameSessionIsFinished();\n      const gameSessionIsPlaying = useGameSessionIsPlaying();\n      const displayContent = !gameParamsIsLoading; // && !isLoading && !error;\n      const router = useRouter();\n      const goToStartPage = React.useCallback(() => {\n        router.push('/');\n      }, [router]);\n      const showSmallLoader = isLoading && gameSessionIsPlaying;\n      const showLargeLoader = isLoading && !gameSessionIsPlaying;\n      return (\n        <div className={classnames(wrapperClassName, styles.container)}>\n          {/* Show error */}\n          {showErrorInWrapper && error && (\n            <Box className={classnames(styles.contentErrorContainer)} m={2}>\n              <Typography className={classnames(errorClassName, styles.contentError)} m={2}>\n                {errorToString(error)}\n              </Typography>\n              <Stack\n                className={styles.actions}\n                spacing={2}\n                direction=\"row\"\n                m={2}\n                justifyContent=\"center\"\n              >\n                <Button className=\"FixMuiButton\" onClick={goToStartPage} variant=\"contained\">\n                  <span className=\"Text\">Начать сначала</span>\n                </Button>\n              </Stack>\n            </Box>\n          )}\n          {displayContent && (\n            <Box className={styles.contentContainer}>\n              <Component\n                {...props}\n                error={error}\n                isLoading={isLoading}\n                gameSessionIsFinished={gameSessionIsFinished}\n                gameSessionIsPlaying={gameSessionIsPlaying}\n                // gameSessionIsFailed={gameSessionIsFailed}\n              />\n            </Box>\n          )}\n          {/* Show small loader at the end of article items if some data has loaded */}\n          <LoaderSplash\n            className={styles.smallLoader}\n            spinnerSize=\"medium\"\n            // show // Without animations!\n            show={showSmallLoader}\n          />\n          {/* Show large covering loader splash if no data loaded */}\n          <LoaderSplash\n            className={styles.loaderSplash}\n            show={showLargeLoader}\n            spinnerSize=\"large\"\n            bg=\"white\"\n            mode=\"cover\"\n            fullSize\n          />\n        </div>\n      );\n    };\n  };\n}\n","/** @module WrappedGameBlock\n *  @since 2023.02.14, 14:52\n *  @changed 2023.02.15, 16:04\n */\n\nimport React from 'react';\nimport { compose } from 'redux';\n\nimport { withGamePlayingWrapperFabric } from '@/ui-blocks/withGamePlayingWrapper';\n\nimport { GameBlock, TGameBlockProps } from './GameBlock';\n\nimport styles from './WrappedGameBlock.module.scss';\n\n// Export wrapped version\nexport const WrappedGameBlock = compose<React.FC<TGameBlockProps>>(\n  withGamePlayingWrapperFabric<TGameBlockProps>({\n    errorClassName: styles.error,\n    wrapperClassName: styles.wrapper,\n  }),\n)(GameBlock);\n","export * from './GameBlock';\nexport * from './WrappedGameBlock';\n","/** @module GamePage\n *  @since 2023.02.14, 14:50\n *  @changed 2023.02.14, 14:50\n */\n\nimport GenericPageLayout from '@/layout/GenericPageLayout';\nimport { PageSectionWrapper } from '@/ui-elements';\nimport { subPageTitle } from '@/ui-support/pageUtils';\nimport { WrappedGameBlock } from '@/ui-blocks/GameBlock';\n\nexport default function IndexPage(): JSX.Element {\n  const pageTitle = 'Игра';\n  const title = subPageTitle(pageTitle);\n  return (\n    <GenericPageLayout title={title}>\n      <PageSectionWrapper flex flexVertical fullSizeFlexChild flexCenter>\n        <WrappedGameBlock />\n      </PageSectionWrapper>\n    </GenericPageLayout>\n  );\n}\n","/** @module GamePage\n *  @since 2023.02.14, 14:50\n *  @changed 2023.02.14, 14:50\n */\n\nimport GamePage from '@/ui-pages/GamePage';\n\nexport default GamePage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameLayout_container__a9RxR\",\"box\":\"GameLayout_box__2JorJ\",\"partnersBox\":\"GameLayout_partnersBox__sKL6r\",\"gameBox\":\"GameLayout_gameBox__YQH2L\",\"DEBUG\":\"GameLayout_DEBUG__44p6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GamePlaying_container__8SLk7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GamePlayingContent_container__aSnwj\",\"Empty\":\"GamePlayingContent_Empty__U0pPk\",\"WaitingMulti\":\"GamePlayingContent_WaitingMulti__UKIn8\",\"WaitingSingle\":\"GamePlayingContent_WaitingSingle__ofYKC\",\"WaitingFailed\":\"GamePlayingContent_WaitingFailed__eTXf9\",\"WasCancelled\":\"GamePlayingContent_WasCancelled__MfhlT\",\"GameReady\":\"GamePlayingContent_GameReady__lOmat\",\"WaitingStart\":\"GamePlayingContent_WaitingStart__YaWyM\",\"DEBUG\":\"GamePlayingContent_DEBUG__wFybG\",\"error\":\"GamePlayingContent_error__nWi_M\",\"actions\":\"GamePlayingContent_actions__fvFCS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"WrappedGamePlaying_error__X2EPd\",\"wrapper\":\"WrappedGamePlaying_wrapper__YSwgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Partner_container__rAS5t\",\"self\":\"Partner_self__592Ry\",\"other\":\"Partner_other__3_ouq\",\"question\":\"Partner_question__LRcnT\",\"questionsBox\":\"Partner_questionsBox__AV0_v\",\"DEBUG\":\"Partner_DEBUG__Lv99n\",\"questionCorrect\":\"Partner_questionCorrect__NKwdH\",\"questionWrong\":\"Partner_questionWrong__qKUbS\",\"questionFinished\":\"Partner_questionFinished__JvMSe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"QuestionsCard_container__2lWSZ\",\"infoRow\":\"QuestionsCard_infoRow__vSNhD\",\"progressRow\":\"QuestionsCard_progressRow__Y7G4Y\",\"questionRow\":\"QuestionsCard_questionRow__xKYGg\",\"answersRow\":\"QuestionsCard_answersRow__mg5yR\",\"actionsRow\":\"QuestionsCard_actionsRow__Yqp0R\",\"DEBUG\":\"QuestionsCard_DEBUG__E8uoT\",\"progressBar\":\"QuestionsCard_progressBar__aZZ3b\",\"answersLoading\":\"QuestionsCard_answersLoading__FvUcC\",\"answer\":\"QuestionsCard_answer__33R_Y\",\"answerText\":\"QuestionsCard_answerText__heme_\",\"answerCorrect\":\"QuestionsCard_answerCorrect__4JKNB\",\"answerWrong\":\"QuestionsCard_answerWrong__9_LCO\",\"answerChecked\":\"QuestionsCard_answerChecked__Zvpm4\",\"answerLoading\":\"QuestionsCard_answerLoading__GaQ1G\",\"answerActive\":\"QuestionsCard_answerActive__OKuD6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameBlock_container__6ajde\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameBlockContent_container__x3Jwv\",\"Empty\":\"GameBlockContent_Empty__Kfu40\",\"GameReady\":\"GameBlockContent_GameReady__jV5t8\",\"DEBUG\":\"GameBlockContent_DEBUG__vBGKd\",\"error\":\"GameBlockContent_error__fsdHU\",\"actions\":\"GameBlockContent_actions__ohim0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"WrappedGameBlock_error__6n7kx\",\"wrapper\":\"WrappedGameBlock_wrapper__KbOID\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GamePlayingWrapper_container__c_kTA\",\"contentError\":\"GamePlayingWrapper_contentError__dhYPs\",\"contentContainer\":\"GamePlayingWrapper_contentContainer__xlavK\",\"smallLoader\":\"GamePlayingWrapper_smallLoader__mYf3r\",\"loaderSplash\":\"GamePlayingWrapper_loaderSplash__qFtCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameSessionWrapper_container__aDk9O\",\"contentError\":\"GameSessionWrapper_contentError__ATjRz\",\"contentContainer\":\"GameSessionWrapper_contentContainer__9ZWe_\",\"smallLoader\":\"GameSessionWrapper_smallLoader__MetXT\",\"loaderSplash\":\"GameSessionWrapper_loaderSplash__61cgZ\"};"],"names":["window","__NEXT_P","push","__webpack_require__","params","wrapperClassName","errorClassName","showErrorInWrapper","Empty","param","reason","jsx_runtime","jsx","Box","data-reason","className","classnames","styles","config","jsxs","Typography","Partner","props","self","name","questionAnswers","questions","useQuestions","questionsContent","React","length","map","q","idx","id","key","answer","isCorrect","isWrong","textAlign","gutterBottom","Stack","flexDirection","flexWrap","gap","QuestionsCard","dispatch","useAppDispatch","router","useRouter","isLoading","useGameSessionIsLoading","isFinished","useGameSessionIsFinished","currentAnswerIsCorrect","useGameSessionCurrentAnswerIsCorrect","currentAnswerIdx","useGameSessionCurrentAnswerIdx","hasAnswered","undefined","hasChecked","questionsCount","currentQuestionIdx","useGameSessionCurrentQuestionIdx","questionIdx","questionNo","isLastQuestion","currentQuestion","questionId","questionText","question","answers","currentAnswer","Array","isArray","answerId","percents","String","Math","round","progress","handleAnswer","ev","answerIdx","Number","currentTarget","dataset","gameSessionActions","answersContent","a","text","isActive","isCurrent","isCurrentChecked","isChecked","isCurrentCheckedCorrect","isCurrentCheckedWrong","data-answer","onClick","handleCancel","gameSessionStopThunk","cancelAllActiveRequests","checkAnswers","error","console","gameSessionSendAnswerThunk","goToNextQuestion","saveGameSessionQuestionIdxThunk","then","action","payload","goToResults","gameSessionFinishedThunk","my","flex","sx","width","mt","variant","Button","disabled","span","GameLayout","currentToken","useGameParamsToken","partnersInfo","useGameSessionPartnersInfo","partnersContent","tokens","Object","keys","orderedTokens","filter","token","concat","info","GamePlaying","userName","useGameParamsUserName","gameMode","useGameParamsGameMode","hasGameStarted","useGameWaitingIsGameStarted","isPlaying","useGameSessionIsPlaying","partnerToken","useGameSessionPartnerToken","gameToken","useGameSessionGameToken","isGameReady","isParamsReady","content","compose","_params_showErrorInWrapper","Component","isGameParamsLoading","useGameParamsIsLoading","gameParamsError","useGameParamsError","gameSessionError","useGameSessionError","toast","errorToString","goToStartPage","div","m","spacing","direction","justifyContent","displayContent","LoaderSplash","spinnerSize","show","bg","mode","fullSize","WrappedGameBlock","gameSessionIsChecking","useGameSessionIsSessionChecking","gameParamsIsLoading","gameSessionIsLoading","questionsIsLoading","useQuestionsIsLoading","questionsError","useQuestionsError","gameSessionIsFinished","gameSessionIsPlaying","loadQuestionsThunk","log","gameSessionStartThunk","game","title","subPageTitle","GenericPageLayout","PageSectionWrapper","flexVertical","fullSizeFlexChild","flexCenter","module","exports"],"sourceRoot":""}