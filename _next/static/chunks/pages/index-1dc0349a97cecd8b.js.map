{"version":3,"file":"static/chunks/pages/index-1dc0349a97cecd8b.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./src/features/GameParams/services/postSetName.ts","webpack://_N_E/./src/features/GameParams/services/index.ts","webpack://_N_E/./src/ui-blocks/UserNameDialog/UserNameDialog.tsx","webpack://_N_E/./src/ui-blocks/StartBlock/StartBlock.tsx","webpack://_N_E/./src/ui-blocks/withGameParamsWrapper/withGameParamsWrapper.tsx","webpack://_N_E/./src/ui-blocks/StartBlock/WrappedStartBlock.tsx","webpack://_N_E/./src/ui-blocks/StartBlock/index.ts","webpack://_N_E/./src/ui-pages/StartPage.tsx","webpack://_N_E/./src/pages/index.tsx","webpack://_N_E/./src/ui-blocks/StartBlock/StartBlock.module.scss","webpack://_N_E/./src/ui-blocks/StartBlock/WrappedStartBlock.module.scss","webpack://_N_E/./src/ui-blocks/UserNameDialog/UserNameDialog.module.scss","webpack://_N_E/./src/ui-blocks/withGameParamsWrapper/GameParamsWrapper.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","/** @module Search\n *  @since 2023.01.28, 15:57\n *  @changed 2023.02.11, 21:36\n */\n\nimport { AnyAction, createAsyncThunk, Store, ThunkDispatch } from '@reduxjs/toolkit';\n\nimport { TRootState } from '@/core/app/app-root-state';\nimport config from '@/config';\nimport { simpleDataFetch } from '@/core/helpers/simpleDataFetch';\n\ninterface TResponseData {\n  Token: string; // '230209-185714-942-3589518'\n  success: boolean | string;\n  error?: string;\n}\nexport interface TPostSetNameResult {\n  token?: string;\n  // success?: string | boolean;\n}\n\nexport interface TSetNameParams {\n  name: string;\n}\n\nexport async function postSetName(params: TSetNameParams): Promise<TPostSetNameResult> {\n  const method = 'POST';\n  const url = config.api.apiUrlPrefix + '/setName';\n  const { name } = params;\n  const queryData = {\n    name,\n  };\n  /* console.log('[postSetName]: request start', {\n   *   queryData,\n   *   params,\n   *   method,\n   *   url,\n   * });\n   */\n  return simpleDataFetch<TResponseData>({ url, method, data: queryData })\n    .then((data) => {\n      const { Token: token, success, error } = data;\n      // Check possible errors...\n      if (!success || error) {\n        throw new Error(error || 'Операция завершена с неопределённой ошибкой');\n      }\n      if (!token) {\n        throw new Error('Не получен токен сессии!');\n      }\n      // Fetch data...\n      const result: TPostSetNameResult = {\n        token,\n      };\n      /* console.log('[postSetName]: request done', data, {\n       *   result,\n       *   success,\n       *   token,\n       *   url,\n       * });\n       */\n      return result;\n    })\n    .catch((error) => {\n      const errorText = 'Ошибка сохранения имени';\n      const throwError = new Error(errorText + ': ' + error.message);\n      // eslint-disable-next-line no-console\n      console.error('[postSetName]: request catch', {\n        error,\n        queryData,\n        params,\n        method,\n        url,\n      });\n      // debugger; // eslint-disable-line no-debugger\n      throw throwError;\n    });\n}\n\n// Thunk\nexport const postSetNameThunk = createAsyncThunk(\n  'articles/postSetNameThunk',\n  async (params: TSetNameParams): Promise<TPostSetNameResult> => {\n    return await postSetName(params);\n  },\n);\n\n// Action\nexport function postSetNameAction(rootStore: Store<TRootState>, params: TSetNameParams): void {\n  const thunkDispatch = rootStore.dispatch as ThunkDispatch<TRootState, void, AnyAction>;\n  thunkDispatch(postSetNameThunk(params));\n}\n","export * from './fetchAppInfo';\nexport * from './postSetName';\n","/** @module UserNameDialog\n *  @since 2023.02.10, 15:33\n *  @changed 2023.02.10, 21:51\n */\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport { Stack } from '@mui/material';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport CloseIcon from '@mui/icons-material/Close';\nimport CheckIcon from '@mui/icons-material/Check';\nimport TextField from '@mui/material/TextField';\n\nimport classnames from 'classnames';\n\nimport styles from './UserNameDialog.module.scss';\n\nexport interface TUserNameDialogProps {\n  className?: string;\n  open: boolean;\n  name: string;\n  onClose: () => void;\n  onSubmit: (value: string) => void;\n}\n\nexport function UserNameDialog(props: TUserNameDialogProps): JSX.Element {\n  const { className } = props;\n  const { onClose, onSubmit, name: defaultName, open } = props;\n  const [name, setName] = React.useState<string>(defaultName);\n\n  const onChange = React.useCallback(\n    (ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n      const name = ev.currentTarget.value;\n      setName(name);\n    },\n    [],\n  );\n\n  const onButtonSubmit = React.useCallback(() => {\n    onSubmit(name);\n  }, [name, onSubmit]);\n\n  const onFormSubmit = React.useCallback(\n    (ev?: React.FormEvent<HTMLFormElement> | React.MouseEvent<HTMLDivElement>) => {\n      ev?.preventDefault(); // Disable html form submission!\n      onButtonSubmit();\n    },\n    [onButtonSubmit],\n  );\n\n  return (\n    <Dialog className={classnames(className, styles.container)} onClose={onClose} open={open}>\n      <DialogTitle className={styles.dialogTitle}>Выбрать имя</DialogTitle>\n      <Box m={3}>\n        <form className={styles.form} onSubmit={onFormSubmit}>\n          <Stack direction=\"column\" spacing={3}>\n            <Stack direction=\"row\" spacing={2}>\n              <TextField\n                id=\"name\"\n                label=\"Имя\"\n                variant=\"filled\"\n                defaultValue={defaultName}\n                onChange={onChange}\n                autoFocus\n                fullWidth\n              />\n            </Stack>\n            <Stack direction=\"row\" spacing={2}>\n              <Button\n                className=\"FixMuiButton\"\n                disabled={!name}\n                onClick={onButtonSubmit}\n                variant=\"contained\"\n                startIcon={<CheckIcon />}\n              >\n                <span className=\"Text\">Продолжить</span>\n              </Button>\n              <Button\n                className=\"FixMuiButton\"\n                onClick={onClose}\n                variant=\"outlined\"\n                startIcon={<CloseIcon />}\n              >\n                <span className=\"Text\">Отменить</span>\n              </Button>\n            </Stack>\n          </Stack>\n        </form>\n      </Box>\n    </Dialog>\n  );\n}\n","/** @module StartBlock\n *  @since 2023.02.07, 20:35\n *  @changed 2023.02.10, 21:53\n */\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport classnames from 'classnames';\n\nimport { UserNameDialog } from '@/ui-blocks/UserNameDialog';\n\nimport {\n  // useRootStore,\n  // useGameParamsToken,\n  useAppDispatch,\n  useGameParamsHasStarted,\n  // useGameParamsGameMode,\n  useGameParamsIsLoading,\n  useGameParamsToken,\n  useGameParamsUserName,\n} from '@/core';\nimport { actions as gameParamsActions } from '@/features/GameParams/reducer';\nimport { TWithGameParamsWrapperProps } from '../withGameParamsWrapper/withGameParamsWrapper';\n\nimport styles from './StartBlock.module.scss';\n// import { postSetNameAction } from '@/features/GameParams/services';\n\nexport interface TStartBlockProps extends TWithGameParamsWrapperProps {\n  className?: string;\n}\n\nexport function StartBlock(props: TStartBlockProps) {\n  const { className } = props;\n  /* // @see:\n   * - [Школа/ сервисы – Figma](https://www.figma.com/file/C1ylOhuxpqwMitM11JHE8Y/%D0%A8%D0%BA%D0%BE%D0%BB%D0%B0%2F-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B?node-id=2323%3A1061&t=vjG6YjAtpOyUFoIc-0)\n   * - [React Typography component - Material UI](https://mui.com/material-ui/react-typography/)\n   */\n\n  const dispatch = useAppDispatch();\n  // const appRootStore = useRootStore();\n  const router = useRouter();\n\n  const isLoading = useGameParamsIsLoading();\n  const hasStarted = useGameParamsHasStarted();\n  const token = useGameParamsToken();\n  const userName = useGameParamsUserName();\n  // const gameMode = useGameParamsGameMode();\n\n  const [isUserNameDialogOpened, openUserNameDialog] = React.useState(false);\n\n  const closeNameDialog = React.useCallback(() => {\n    openUserNameDialog(false);\n  }, []);\n\n  const handleUserName = React.useCallback(\n    (name: string) => {\n      closeNameDialog();\n      dispatch(gameParamsActions.setUserName(name));\n      // XXX: To save name to server here?\n      // postSetNameAction(appRootStore, { name });\n      // Go to the waiting page...\n      router.push('/waiting'); // DEBUG\n    },\n    [dispatch, router, closeNameDialog],\n  );\n\n  const chooseSinglePlayer = React.useCallback(() => {\n    dispatch(gameParamsActions.setGameMode('single'));\n    openUserNameDialog(true);\n  }, [dispatch]);\n\n  const chooseMultiPlayer = React.useCallback(() => {\n    dispatch(gameParamsActions.setGameMode('multi'));\n    openUserNameDialog(true);\n  }, [dispatch]);\n\n  if (!token) {\n    return null;\n  }\n\n  return (\n    <Box className={classnames(className, styles.container)}>\n      <Typography variant=\"h5\" className={classnames(styles.title)}>\n        Турнир по теме «Что проверить в договорах»\n      </Typography>\n      {!isLoading && hasStarted && token && (\n        <>\n          <Typography className={classnames(styles.question)}>Как вы хотите сыграть?</Typography>\n          <ButtonGroup\n            className={classnames(styles.actions)}\n            variant=\"outlined\"\n            aria-label=\"outlined primary button group\"\n          >\n            <Button className=\"FixMuiButton\" onClick={chooseSinglePlayer}>\n              <span className=\"Text\">Турнир для одного</span>\n            </Button>\n            <Button className=\"FixMuiButton\" onClick={chooseMultiPlayer}>\n              <span className=\"Text\">Турнир для двоих</span>\n            </Button>\n          </ButtonGroup>\n        </>\n      )}\n      <UserNameDialog\n        name={userName || ''}\n        open={isUserNameDialogOpened}\n        onClose={closeNameDialog}\n        onSubmit={handleUserName}\n      />\n    </Box>\n  );\n}\n","/** @module withGameParamsWrapper\n *  @desc Wrapping any component (with GameParamsWrapper)\n *  @since 2023.02.10, 20:24\n *  @changed 2023.02.10, 20:24\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport { useGameParamsIsLoading, useGameParamsError } from '@/core/app/app-reducer';\nimport { errorToString } from '@/utils';\nimport { LoaderSplash } from '@/ui-elements';\nimport { Typography } from '@mui/material';\n\nimport styles from './GameParamsWrapper.module.scss';\n\nexport interface TWithGameParamsWrapperParams {\n  wrapperClassName?: string;\n  errorClassName?: string;\n  showErrorInWrapper?: boolean;\n}\n\nexport interface TWithGameParamsWrapperProps extends JSX.IntrinsicAttributes {\n  error?: Error;\n  isLoading?: boolean;\n}\n\nexport function withGameParamsWrapperFabric<P extends JSX.IntrinsicAttributes>(\n  params: TWithGameParamsWrapperParams,\n): (Component: React.ComponentType<P & TWithGameParamsWrapperProps>) => (props: P) => JSX.Element {\n  const { wrapperClassName, errorClassName, showErrorInWrapper = true } = params;\n  return function withGameParamsWrapper<P extends JSX.IntrinsicAttributes>(\n    Component: React.ComponentType<P>,\n  ) {\n    return function GameParamsWrapper(props: P) {\n      const isLoading = useGameParamsIsLoading();\n      const error = useGameParamsError();\n      return (\n        <div className={classnames(wrapperClassName, styles.container)}>\n          {/* Show error */}\n          {showErrorInWrapper && error && (\n            <Typography className={classnames(errorClassName, styles.contentError)}>\n              {errorToString(error)}\n            </Typography>\n          )}\n          <div className={styles.contentContainer}>\n            <Component {...props} error={error} isLoading={isLoading} />\n          </div>\n          {/* Show small loader at the end of article items if some data has loaded */}\n          {isLoading && (\n            <LoaderSplash\n              className={styles.smallLoader}\n              spinnerSize=\"medium\"\n              show // Without animations!\n            />\n          )}\n          {/* Show large covering loader splash if no data loaded */}\n          {/*\n          <LoaderSplash\n            className={styles.loaderSplash}\n            show={isLoading}\n            spinnerSize=\"large\"\n            bg=\"white\"\n            mode=\"cover\"\n            fullSize\n          />\n          */}\n        </div>\n      );\n    };\n  };\n}\n","/** @module WrappedStartBlock\n *  @since 2023.02.10, 20:31\n *  @changed 2023.02.10, 20:31\n */\n\nimport React from 'react';\nimport { compose } from 'redux';\n\nimport { withGameParamsWrapperFabric } from '@/ui-blocks/withGameParamsWrapper';\n\nimport { StartBlock, TStartBlockProps } from './StartBlock';\n\nimport styles from './WrappedStartBlock.module.scss';\n\n// Export wrapped version\nexport const WrappedStartBlock = compose<React.FC<TStartBlockProps>>(\n  withGameParamsWrapperFabric<TStartBlockProps>({\n    errorClassName: styles.error,\n    wrapperClassName: styles.wrapper,\n  }),\n)(StartBlock);\n","export * from './StartBlock';\nexport * from './WrappedStartBlock';\n","/** @module StartPage\n *  @since 2023.01.26, 22:51\n *  @changed 2023.02.16, 01:29\n */\n\nimport React from 'react';\n\nimport { useAppDispatch } from '@/core/app/app-store';\nimport { useRootStore } from '@/core/app/app-root-state';\n\nimport { fetchAppInfoAction } from '@/features/GameParams/services';\n\nimport GenericPageLayout from '@/layout/GenericPageLayout';\nimport { PageSectionWrapper } from '@/ui-elements';\nimport { subPageTitle } from '@/ui-support/pageUtils';\nimport { WrappedStartBlock } from '@/ui-blocks/StartBlock';\nimport { useGameParamsHasStarted, useGameParamsToken } from '@/core';\n\nexport default function IndexPage(): JSX.Element {\n  const pageTitle = 'Стартовая страница';\n  const title = subPageTitle(pageTitle);\n\n  const dispatch = useAppDispatch();\n  const appRootStore = useRootStore();\n\n  const token = useGameParamsToken();\n  const hasStarted = useGameParamsHasStarted();\n\n  // Effect: Update data on essential parameters change\n  React.useEffect(() => {\n    // If started (`hasStarted` is 'memoized') but token hasn't received...\n    if (!token && hasStarted) {\n      // ...try to fetch it again...\n      fetchAppInfoAction(appRootStore);\n    }\n    // NOTE: Treating `hasStarted` as 'memoized': not using in dependencies\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    dispatch,\n    appRootStore,\n    // hasStarted,\n    token,\n  ]);\n\n  return (\n    <GenericPageLayout title={title}>\n      <PageSectionWrapper flex flexVertical fullSizeFlexChild flexCenter>\n        <WrappedStartBlock />\n      </PageSectionWrapper>\n    </GenericPageLayout>\n  );\n}\n","/** @module IndexPage\n *  @since 2023.01.26, 22:51\n *  @changed 2023.02.02, 08:41\n */\n\nimport StartPage from '@/ui-pages/StartPage';\n\nexport default StartPage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StartBlock_container__oZuED\",\"actions\":\"StartBlock_actions__BM_KP\",\"question\":\"StartBlock_question__wSXMI\",\"title\":\"StartBlock_title__bQkon\",\"error\":\"StartBlock_error__QD1tQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"WrappedStartBlock_error__SYdEX\",\"wrapper\":\"WrappedStartBlock_wrapper__EOXfs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"UserNameDialog_form__W6gqc\",\"dialogTitle\":\"UserNameDialog_dialogTitle__ue4w_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameParamsWrapper_container__9iO24\",\"contentError\":\"GameParamsWrapper_contentError__gKQ2H\",\"contentContainer\":\"GameParamsWrapper_contentContainer__dyZPT\",\"smallLoader\":\"GameParamsWrapper_smallLoader__HcgG3\",\"loaderSplash\":\"GameParamsWrapper_loaderSplash__n5GhT\"};"],"names":["window","__NEXT_P","push","__webpack_require__","params","wrapperClassName","errorClassName","showErrorInWrapper","postSetName","_async_to_generator","Z","method","url","queryData","config","name","simpleDataFetch","data","then","Token","success","error","token","catch","throwError","errorText","message","console","createAsyncThunk","_state","sent","UserNameDialog","props","className","onClose","onSubmit","open","React","defaultName","setName","onChange","ev","currentTarget","value","onButtonSubmit","onFormSubmit","preventDefault","jsx_runtime","jsxs","Dialog","classnames","styles","jsx","DialogTitle","Box","m","form","Stack","direction","spacing","TextField","id","label","variant","defaultValue","autoFocus","fullWidth","Button","disabled","onClick","startIcon","CheckIcon","span","CloseIcon","WrappedStartBlock","compose","_params_showErrorInWrapper","Component","isLoading","useGameParamsIsLoading","useGameParamsError","div","Typography","errorToString","LoaderSplash","spinnerSize","show","dispatch","useAppDispatch","router","useRouter","hasStarted","useGameParamsHasStarted","useGameParamsToken","userName","useGameParamsUserName","isUserNameDialogOpened","openUserNameDialog","closeNameDialog","handleUserName","gameParamsActions","chooseSinglePlayer","chooseMultiPlayer","Fragment","ButtonGroup","aria-label","pages","title","subPageTitle","appRootStore","useRootStore","fetchAppInfoAction","GenericPageLayout","PageSectionWrapper","flex","flexVertical","fullSizeFlexChild","flexCenter","module","exports"],"sourceRoot":""}