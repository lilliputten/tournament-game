{"version":3,"file":"static/chunks/pages/records-table-a8395675b7b81dc7.js","mappings":"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","sources":["webpack://_N_E/?ed0d","webpack://_N_E/./src/ui-blocks/RecordsTableBlock/RecordsTableBlockContent.tsx","webpack://_N_E/./src/ui-blocks/withRecordsTableWrapper/withRecordsTableWrapper.tsx","webpack://_N_E/./src/ui-blocks/RecordsTableBlock/RecordsTableBlock.tsx","webpack://_N_E/./src/ui-blocks/RecordsTableBlock/index.ts","webpack://_N_E/./src/ui-pages/RecordsTablePage/RecordsTablePage.tsx","webpack://_N_E/./src/ui-pages/RecordsTablePage/index.ts","webpack://_N_E/./src/pages/records-table.tsx","webpack://_N_E/./src/ui-blocks/RecordsTableBlock/RecordsTableBlock.module.scss","webpack://_N_E/./src/ui-blocks/RecordsTableBlock/RecordsTableBlockContent.module.scss","webpack://_N_E/./src/ui-blocks/withRecordsTableWrapper/RecordsTableWrapper.module.scss","webpack://_N_E/./src/ui-pages/RecordsTablePage/RecordsTablePage.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/records-table\",\n      function () {\n        return require(\"private-next-pages/records-table.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/records-table\"])\n      });\n    }\n  ","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { Stack } from '@mui/system';\nimport classnames from 'classnames';\nimport { format } from 'date-fns';\n\nimport config from '@/config';\nimport { getDurationString } from '@/utils';\nimport { TGameToken, TRecordEntry, TRecordsTable, TToken } from '@/core';\n\nimport styles from './RecordsTableBlockContent.module.scss';\n\nexport type TCb = () => void;\n\nexport function Empty({ reason }: { reason?: string }) {\n  return (\n    <Box data-reason={reason || null} className={classnames(styles.container, styles.Empty)}>\n      {config.build.isDev && reason && <Typography>WatingBlock Empty: {reason}</Typography>}\n    </Box>\n  );\n}\n\ninterface TRecordsTableProps {\n  onClick?: TCb;\n  goToStartPage?: TCb;\n  token?: TToken;\n  gameToken?: TGameToken;\n  recordsTable?: TRecordsTable;\n}\n\n/* Table Columns:\n * - Place\n * - Name\n * - Answers\n * - Time\n */\n\nfunction ShowRow({\n  recordEntry,\n  token,\n  activeGameToken,\n  idx,\n}: {\n  recordEntry: TRecordEntry;\n  token?: TToken;\n  activeGameToken?: TGameToken;\n  idx: number;\n}) {\n  const no = idx + 1;\n  const {\n    // finishedByPartner, // '230317-125246-307-744394'\n    // finishedStatus, // 'all'\n    finishedTimestamp, // 1679034851649\n    // finishedTimestr, // '2023.03.17 13:34:11'\n    // gameMode, // 'multi'\n    // gameStatus, // 'finished'\n    gameToken, // '230317-132512-472-5153359'\n    // lastAnswerTimestamp, // 1679034850533\n    // lastAnswerTimestr, // '2023.03.17 13:34:10'\n    // lastAnsweredBy, // '230317-125246-307-744394'\n    // lastCheckTimestamp, // 1679034850255\n    // lastCheckTimestr, // '2023.03.17 13:34:10'\n    // lastCheckedBy, // '230317-125246-307-744394'\n    name, // 'fox'\n    partnerToken, // '230317-125246-307-744394'\n    questionAnswers, // {Buhgalter-kompanii-pri-zapolnen: 'wrong', Rekvizity-kakogo-UFK: 'wrong'}\n    // questionsIds, // (2) ['Rekvizity-kakogo-UFK', 'Buhgalter-kompanii-pri-zapolnen']\n    startedTimestamp, // 1679034312471\n    // startedTimestr, // '2023.03.17 13:25:12'\n    // status, // 'finished'\n    // winnerToken, // '230310-134747-174-765536'\n  } = recordEntry; // New variant (game record entries\n  const isActiveGame = gameToken === activeGameToken && partnerToken === token;\n  const answers = questionAnswers && Object.values(questionAnswers);\n  const totalAnswersCount = answers ? answers.length : 0;\n  const correctAnswersCount =\n    answers && answers.reduce((summ, value) => (value === 'correct' ? summ + 1 : summ), 0);\n  const finishedStr =\n    finishedTimestamp && format(new Date(finishedTimestamp), config.constants.dateTimeFormat);\n  const duration = getDurationString(startedTimestamp, finishedTimestamp);\n  const recordId = gameToken + '/' + partnerToken;\n  // prettier-ignore\n  return (\n    <tr\n      id={recordId}\n      className={classnames(\n        styles.tableRow,\n        styles['tableRow' + no],\n        isActiveGame && styles.activeGame,\n      )}\n    >\n      <td className={classnames(styles.tableCell, styles.cellNo)}>{no}</td>\n      <td className={classnames(styles.tableCell, styles.cellName)}>{name}</td>\n      <td className={classnames(styles.tableCell, styles.cellAnswers)}>\n        {correctAnswersCount}{!!totalAnswersCount && ' / ' + totalAnswersCount}\n      </td>\n      <td className={classnames(styles.tableCell, styles.cellTime)}>{duration}</td>\n      <td className={classnames(styles.tableCell, styles.cellDate)}>{finishedStr}</td>\n    </tr>\n  );\n}\n\nfunction ShowTable({\n  recordsTable,\n  gameToken,\n}: {\n  recordsTable?: TRecordsTable;\n  gameToken?: TGameToken;\n}) {\n  const isRecordsTable = !!(recordsTable && recordsTable.length);\n  const rows = React.useMemo(\n    () =>\n      isRecordsTable &&\n      recordsTable.map((recordEntry, idx) => (\n        <ShowRow\n          key={recordEntry.gameToken + '/' + recordEntry.partnerToken}\n          idx={idx}\n          recordEntry={recordEntry}\n          activeGameToken={gameToken}\n        />\n      )),\n    [isRecordsTable, recordsTable, gameToken],\n  );\n  if (!isRecordsTable) {\n    return <Typography>Турнирная таблица пока пуста.</Typography>;\n  }\n  return (\n    <>\n      <Box className={styles.tableTitle}>Турнирная таблица</Box>\n      <table className={styles.table} cellPadding={4} cellSpacing={2} width=\"100%\" border={0}>\n        <thead className={styles.tableHeadRow}>\n          <tr className={classnames(styles.tableRow, styles.tableHeadRow)}>\n            <th className={classnames(styles.tableHeadCell, styles.cellNo)}>Место</th>\n            <th className={classnames(styles.tableHeadCell, styles.cellName)}>Игрок</th>\n            <th className={classnames(styles.tableHeadCell, styles.cellAnswers)}>Верных ответов</th>\n            <th className={classnames(styles.tableHeadCell, styles.cellTime)}>Время</th>\n            <th className={classnames(styles.tableHeadCell, styles.cellDate)}>Дата</th>\n          </tr>\n        </thead>\n        <tbody className={styles.tableBody}>{rows}</tbody>\n      </table>\n    </>\n  );\n}\n\nexport function RecordsTableContent(props: TRecordsTableProps) {\n  const { onClick, goToStartPage, recordsTable, gameToken } = props;\n  const isFinishedGame = !!gameToken;\n  return (\n    <Box className={classnames(styles.container, styles.WaitingFailed)}>\n      <ShowTable recordsTable={recordsTable} gameToken={gameToken} />\n      <Stack\n        className={styles.actions}\n        spacing={2}\n        direction=\"row\"\n        justifyContent=\"center\"\n        my={2}\n        mt={4}\n      >\n        {!!goToStartPage && (\n          <Button className=\"FixMuiButton\" onClick={goToStartPage} variant=\"contained\">\n            <span className=\"Text\">Сыграть ещё раз</span>\n          </Button>\n        )}\n        {!!onClick && isFinishedGame && (\n          <Button className=\"FixMuiButton\" onClick={onClick} disabled={!onClick}>\n            <span className=\"Text\">Посмотреть результаты</span>\n          </Button>\n        )}\n      </Stack>\n    </Box>\n  );\n}\n","/** @module withRecordsTableWrapper\n *  @desc Wrapping any component (with RecordsTableWrapper)\n *  @since 2023.03.19, 02:08\n *  @changed 2023.03.19, 02:08\n */\n\nimport React from 'react';\nimport { Typography } from '@mui/material';\nimport classnames from 'classnames';\n\nimport { toast } from '@/ui-elements';\nimport { errorToString } from '@/utils';\nimport { useRecordsTableIsLoading, useRecordsTableError } from '@/core/app/app-reducer';\nimport { LoaderSplash } from '@/ui-elements';\n\nimport styles from './RecordsTableWrapper.module.scss';\n\nexport interface TWithRecordsTableWrapperParams {\n  wrapperClassName?: string;\n  contentClassName?: string;\n  errorClassName?: string;\n  showErrorInWrapper?: boolean;\n}\n\nexport interface TWithRecordsTableWrapperProps extends JSX.IntrinsicAttributes {\n  error?: Error;\n  isLoading?: boolean;\n}\n\nexport function withRecordsTableWrapperFabric<P extends JSX.IntrinsicAttributes>(\n  params: TWithRecordsTableWrapperParams,\n): (\n  Component: React.ComponentType<P & TWithRecordsTableWrapperProps>,\n) => (props: P) => JSX.Element {\n  const { wrapperClassName, contentClassName, errorClassName, showErrorInWrapper = true } = params;\n  return function withRecordsTableWrapper<P extends JSX.IntrinsicAttributes>(\n    Component: React.ComponentType<P>,\n  ) {\n    return function RecordsTableWrapper(props: P) {\n      const isLoading = useRecordsTableIsLoading();\n      const error = useRecordsTableError();\n      // Effect: Show error toast\n      React.useEffect(() => {\n        error && toast.error(errorToString(error));\n      }, [error]);\n      return (\n        <div className={classnames(wrapperClassName, styles.container)}>\n          {/* Show error */}\n          {showErrorInWrapper && error && (\n            <Typography className={classnames(errorClassName, styles.contentError)}>\n              {errorToString(error)}\n            </Typography>\n          )}\n          <div className={classnames(contentClassName, styles.contentContainer)}>\n            <Component {...props} error={error} isLoading={isLoading} />\n          </div>\n          {/* Show small loader at the end of article items if some data has loaded\n          {isLoading && (\n            <LoaderSplash\n              className={styles.smallLoader}\n              spinnerSize=\"medium\"\n              show // Without animations!\n            />\n          )}\n          */}\n          {/* Show large covering loader splash if no data loaded */}\n          <LoaderSplash\n            className={styles.loaderSplash}\n            show={isLoading}\n            spinnerSize=\"large\"\n            bg=\"white\"\n            mode=\"cover\"\n            fullSize\n          />\n        </div>\n      );\n    };\n  };\n}\n","/** @module RecordsTableBlock\n *  @since 2023.02.17, 05:07\n *  @changed 2023.03.19, 02:02\n */\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Box from '@mui/material/Box';\nimport classnames from 'classnames';\nimport { compose } from 'redux';\n\nimport {\n  useAppDispatch,\n  useGameParamsToken,\n  useGameSessionGameToken,\n  useRecordsTable,\n  useRecordsTableError,\n  useRecordsTableHasInited,\n  useRecordsTableIsLoading,\n} from '@/core';\n\nimport styles from './RecordsTableBlock.module.scss';\nimport { loadRecordsTableThunk } from '@/features/RecordsTable/services';\nimport { Empty, RecordsTableContent } from './RecordsTableBlockContent';\nimport { withRecordsTableWrapperFabric } from '@/ui-blocks/withRecordsTableWrapper';\n\nexport interface TRecordsTableBlockProps extends JSX.IntrinsicAttributes {\n  className?: string;\n}\n\nexport function RecordsTableBlock(props: TRecordsTableBlockProps): JSX.Element | null {\n  const { className } = props;\n\n  const dispatch = useAppDispatch();\n  const router = useRouter();\n\n  const hasInited = useRecordsTableHasInited();\n  const isLoading = useRecordsTableIsLoading();\n  const error = useRecordsTableError();\n\n  const isReady = hasInited && !isLoading && !error; // All errors & loading splashers should be rendered in `withRecordsTableWrapper`\n\n  const token = useGameParamsToken();\n\n  const gameToken = useGameSessionGameToken();\n\n  const recordsTable = useRecordsTable();\n\n  // To check if game finished -- to show results\n\n  const goToStartPage = React.useCallback(() => {\n    router.push('/');\n  }, [router]);\n\n  // TODO: Use loading state from records feature\n\n  React.useEffect(() => {\n    dispatch(loadRecordsTableThunk());\n  }, [dispatch]);\n\n  const handleShowResults = React.useCallback(() => {\n    router.push('/results');\n  }, [router]);\n\n  // const content = 'RecordsTableBlock';\n  const content = React.useMemo(() => {\n    if (!isReady) {\n      // Don't render nothing and go to the start page if environment isn't ready yet...\n      return <Empty reason=\"Not ready\" />;\n    }\n    return (\n      <RecordsTableContent\n        onClick={handleShowResults}\n        goToStartPage={goToStartPage}\n        token={token}\n        gameToken={gameToken}\n        recordsTable={recordsTable}\n      />\n    );\n  }, [isReady, handleShowResults, goToStartPage, token, gameToken, recordsTable]);\n\n  return (\n    <Box className={classnames(className, styles.container)} my={2}>\n      {content}\n    </Box>\n  );\n}\n\n// Export wrapped version\nexport const WrappedRecordsTableBlock = compose<React.FC<TRecordsTableBlockProps>>(\n  withRecordsTableWrapperFabric<TRecordsTableBlockProps>({\n    errorClassName: styles.error,\n    wrapperClassName: styles.wrapper,\n    contentClassName: styles.content,\n  }),\n)(RecordsTableBlock);\n","export * from './RecordsTableBlock';\n","/** @module RecordsTablePage\n *  @since 2023.03.05, 03:00\n *  @changed 2023.03.05, 04:57\n */\n\nimport GenericPageLayout from '@/layout/GenericPageLayout';\nimport { PageSectionWrapper } from '@/ui-elements';\nimport { subPageTitle } from '@/ui-support/pageUtils';\nimport { RecordsTableBlock, WrappedRecordsTableBlock } from '@/ui-blocks/RecordsTableBlock';\n\nimport styles from './RecordsTablePage.module.scss';\n\nexport function RecordsTablePage(): JSX.Element {\n  const pageTitle = 'Результаты';\n  const title = subPageTitle(pageTitle);\n  return (\n    <GenericPageLayout className={styles.root} title={title}>\n      <PageSectionWrapper flex flexVertical fullSizeFlexChild flexCenter>\n        <WrappedRecordsTableBlock />\n      </PageSectionWrapper>\n    </GenericPageLayout>\n  );\n}\n","export * from './RecordsTablePage';\n","/** @module RecordsTablePage\n *  @since 2023.03.05, 03:27\n *  @changed 2023.03.05, 03:27\n */\n\nimport { RecordsTablePage } from '@/ui-pages/RecordsTablePage';\n\nexport default RecordsTablePage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RecordsTableBlock_container__ldFJX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RecordsTableBlockContent_container__nHyRB\",\"Empty\":\"RecordsTableBlockContent_Empty__KjAeo\",\"error\":\"RecordsTableBlockContent_error__u5eqa\",\"actions\":\"RecordsTableBlockContent_actions__oSbk9\",\"tableHeadCell\":\"RecordsTableBlockContent_tableHeadCell__m4s57\",\"tableHeadRow\":\"RecordsTableBlockContent_tableHeadRow__aOgmx\",\"tableBody\":\"RecordsTableBlockContent_tableBody__PomMv\",\"tableRow\":\"RecordsTableBlockContent_tableRow__iTdYp\",\"tableCell\":\"RecordsTableBlockContent_tableCell__lhgi9\",\"table\":\"RecordsTableBlockContent_table__97c0y\",\"tableTitle\":\"RecordsTableBlockContent_tableTitle__XeeTg\",\"cellNo\":\"RecordsTableBlockContent_cellNo__tEZFT\",\"cellName\":\"RecordsTableBlockContent_cellName__d6qgA\",\"cellTime\":\"RecordsTableBlockContent_cellTime__mxR2I\",\"cellDate\":\"RecordsTableBlockContent_cellDate__y96_E\",\"cellAnswers\":\"RecordsTableBlockContent_cellAnswers__bG9AF\",\"tableRow1\":\"RecordsTableBlockContent_tableRow1__4_1Pz\",\"tableRow2\":\"RecordsTableBlockContent_tableRow2__4Ft_g\",\"tableRow3\":\"RecordsTableBlockContent_tableRow3__lLUEr\",\"activeGame\":\"RecordsTableBlockContent_activeGame__DqtyM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RecordsTableWrapper_container__oNt6W\",\"contentError\":\"RecordsTableWrapper_contentError__ZHIgh\",\"contentContainer\":\"RecordsTableWrapper_contentContainer__iicUz\",\"smallLoader\":\"RecordsTableWrapper_smallLoader__dA1tV\",\"loaderSplash\":\"RecordsTableWrapper_loaderSplash__0EgDn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"RecordsTablePage_root__BMj0_\"};"],"names":["window","__NEXT_P","push","__webpack_require__","params","wrapperClassName","contentClassName","errorClassName","showErrorInWrapper","Empty","param","reason","jsx_runtime","jsx","Box","data-reason","className","classnames","styles","config","jsxs","Typography","ShowRow","recordEntry","token","activeGameToken","no","idx","finishedTimestamp","gameToken","name","partnerToken","questionAnswers","startedTimestamp","answers","Object","values","totalAnswersCount","length","correctAnswersCount","reduce","summ","value","finishedStr","format","Date","duration","getDurationString","tr","id","isActiveGame","td","ShowTable","recordsTable","isRecordsTable","rows","React","map","Fragment","table","cellPadding","cellSpacing","width","border","thead","th","tbody","RecordsTableContent","props","onClick","goToStartPage","Stack","spacing","direction","justifyContent","my","mt","Button","variant","span","disabled","WrappedRecordsTableBlock","compose","_params_showErrorInWrapper","Component","isLoading","useRecordsTableIsLoading","error","useRecordsTableError","toast","errorToString","div","LoaderSplash","show","spinnerSize","bg","mode","fullSize","dispatch","useAppDispatch","router","useRouter","hasInited","useRecordsTableHasInited","isReady","useGameParamsToken","useGameSessionGameToken","useRecordsTable","loadRecordsTableThunk","handleShowResults","content","records_table","title","subPageTitle","GenericPageLayout","PageSectionWrapper","flex","flexVertical","fullSizeFlexChild","flexCenter","module","exports"],"sourceRoot":""}