/* eslint-disable no-console */
/** @type {import('next').NextConfig} */

/** @module next.config
 *  @since 2023.01.26, 18:09
 *  @changed 2023.01.27, 17:47
 */

const path = require('path');
const fs = require('fs');

const prjPath = path.resolve(__dirname);
const srcPath = path.resolve(prjPath, 'src');

const packageConfig = require(path.resolve(prjPath, 'package.json'));

const { version, timetag, timestamp } = packageConfig;

const nodeEnv = process.env.NODE_ENV;
const isTest = nodeEnv === 'test';
const nextPublicDev = process.env.NEXT_PUBLIC_DEV;
const isDev = !!nextPublicDev;
const isDemo = isDev && nextPublicDev === 'DEMO';
const isDevServer = isDev && nextPublicDev === 'DEVSERVER';
const isProd = !isDev;

const buildType = isDevServer ? 'server' : 'build';
const buildMode = isProd ? 'prod' : 'dev';
const buildTag = [
  // Construct general-purpose build tag
  'v.' + version,
  timetag,
  buildType,
  buildMode,
].join('-');

const envParams = {
  version,
  timetag,
  timestamp,
  buildTag,
  buildType,
  buildMode,
  nodeEnv,
  isTest,
  isDev,
  isDevServer,
  isDemo,
  isProd,
};
// console.log('Environment parameters:', envParams);

// Generate & write scss config (file also will be used for sass-loader below, in `commonCssIncludesFiles`)...
// @see:
// - source: `src/global/css-params-source.js`
// - generated json: `src/global/css-params-generated.json`
// - generated scss: `src/global/css-params-generated.scss`
const cssParamsSourcePath = path.resolve(srcPath, 'global');
const generatedCssParamsPath = path.resolve(srcPath, 'global');
const cssProcessPath = path.resolve(srcPath, 'global/css-params-process');
const generatedCssParamsName = 'css-params-generated';
const generatedCssParamsScssFilename = generatedCssParamsName + '.scss';
const generatedCssParamsJsonFilename = generatedCssParamsName + '.json';
const scssGeneratedConfigFile = path.resolve(
  generatedCssParamsPath,
  generatedCssParamsScssFilename,
);
const jsonGeneratedConfigFile = path.resolve(
  generatedCssParamsPath,
  generatedCssParamsJsonFilename,
);
const cssParamsSourceName = 'css-params-source.js';
const cssParamsSource = require(path.resolve(cssParamsSourcePath, cssParamsSourceName));
const { makeScssConfig, processCssConfigObject } = require(path.resolve(
  cssProcessPath,
  'css-process-routines.js',
));
const cssConfig = processCssConfigObject(cssParamsSource);
// const cssVersion = 'v.' + version + ' / ' + timestamp;
const cssInfoStr = 'Generated by next.config from "' + cssParamsSourceName + '"'; // + ' for ' + cssVersion;
const scssGeneratedConfigContent = makeScssConfig(cssConfig, '// ' + cssInfoStr + '\n\n');
fs.writeFileSync(scssGeneratedConfigFile, scssGeneratedConfigContent);
fs.writeFileSync(
  jsonGeneratedConfigFile,
  JSON.stringify({ INFO: cssInfoStr, ...cssConfig }, null, 2),
);
// console.log('Generated', scssGeneratedConfigFile);

const nextConfig = {
  reactStrictMode: false, // NOTE: Debug only? It causes double rendering and hooks calling.
  images: {
    unoptimized: true,
    disableStaticImages: true,
  },
  productionBrowserSourceMaps: true,
  env: envParams,
  sassOptions: {
    includePaths: [generatedCssParamsPath],
    prependData:
      '@use "sass:math"; @use "sass:color"; @import "' + generatedCssParamsScssFilename + '";',
  },
};

module.exports = nextConfig;
